@model VLISSIDES.ViewModels.Recherche.IndexRechercheVM;
@{
    ViewData["Title"] = "Inventaire";
}
<link rel="stylesheet" href="~/css/Recherche.css">
<div class="d-block p-4 p-4">

    @if (Model.ResultatRecherche.Count <= 0)
    {
        <div class="mb-4">
            <h1>Aucun résultat pour "@Model.MotRecherche"</h1>
        </div>
    }
    else
    {
        <div class="mb-4">
            <h1>Résultat de recherche pour "@Model.MotRecherche"</h1>
        </div>
    }

    <div class="container-fluid m-1">

        @* Les recherches *@
        @* Research bar *@
        <div class="row mb-3">
            <div class="col-2 ml-4 text-center">
                <a asp-controller="Recherche" asp-action="Index">
                    <button id="rechercherBTN" type="button" class="container-fluid btn btn-primary">
                        Rechercher
                    </button>
                </a>
            </div>

            <div class="col-10">
                <input id="rechercheGeneral" type="text" class="form-control recherche-input" placeholder="Recherche générale">
            </div>
        </div>

        <div class="row">

            <div class="col-2 bg-secondary">

                @* Recherche précise *@
                <div class="my-2">
                    <h3>Spécifications</h3>
                    <div class="form-group">
                        <label for="specificationTitre">Titre:</label>
                        <input type="text" class="form-control" id="specificationTitre" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="specificationAuteur">Auteur:</label>
                        <input type="text" class="form-control" id="specificationAuteur" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="specificationMaisonEdition">Maison d'édition:</label>
                        <input type="text" class="form-control" id="specificationMaisonEdition" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="specificationCategorie">Categorie:</label>
                        <select class="form-control" id="specificationCategorie" name="categorie">
                            <option value="">Sélectionnez...</option>
                            @foreach (var categorie in Model.ListeCategories)
                            {
                                <option value="@categorie.Nom">@categorie.Nom</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="specificationLangue">Langue:</label>
                        <select class="form-control" id="specificationLangue" name="langue">
                            <option value="">Sélectionnez...</option>
                            @foreach (var langue in Model.ListeLangues)
                            {
                                <option value="@langue.Nom">@langue.Nom</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="specificationPrixMin">Prix minimum:</label>
                        <input type="text" class="form-control" id="specificationPrixMin" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="specificationPrixMax">Prix maximum:</label>
                        <input type="text" class="form-control" id="specificationPrixMax" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="specificationTypeLivre">Type de livre:</label>
                        <select class="form-control" id="specificationTypeLivre" name="typeLivre">
                            <option value="">Sélectionnez...</option>
                            @foreach (var type in Model.ListeTypeLivres)
                            {
                                <option value="@type.Nom">@type.Nom</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            @* Body *@
            <div class="col-10">

                @* Results *@
                <div class="results">
                    @foreach (var livre in Model.ResultatRecherche)
                    {
                        <partial name="_CarteLivreRecherche.cshtml" model="@livre"/>
                    }
                </div>
            </div>
        </div>

    </div>

</div>
<script type="text/javascript">
    //Script pour la recherche
    var btnSearch = document.getElementById("rechercherBTN");

    btnSearch.addEventListener("click", RechercheGenerale);

    async function RechercheGenerale(ev) {
        ev.preventDefault();

        var partieMotCles = "motCles=";
        var partieCriteres = "criteres=";

        //Recherche générale
        var searchGeneral = document.getElementById("rechercheGeneral"); 
        var searchTerm = searchGeneral.value; // Récupérer la valeur de la barre de recherche

        if (searchTerm != "") {
            artieMotCles = partieMotCles.concat(`${searchTerm}|`);
            partieCriteres = partieCriteres.concat("general|");
        }

        //Titre
        var titreSpecification = document.getElementById("specificationTitre"); 
        var titreEntree = titreSpecification.value; // Récupérer la valeur de la barre de recherche

        if (titreEntree != "") {
            partieMotCles = partieMotCles.concat(`${titreEntree}|`);
            partieCriteres = partieCriteres.concat("titre|");
        }

        //Auteur
        var auteurSpecification = document.getElementById("specificationAuteur"); 
        var auteurEntree = auteurSpecification.value; // Récupérer la valeur de la barre de recherche

        if (auteurEntree != "") {
            partieMotCles = partieMotCles.concat(`${auteurEntree}|`);
            partieCriteres = partieCriteres.concat("auteur|");
        }

        //MaisonEdition
        var maisonEditionSpecification = document.getElementById("specificationMaisonEdition"); 
        var maisonEditionEntree = maisonEditionSpecification.value; // Récupérer la valeur de la barre de recherche

        if (maisonEditionEntree != "") {
            partieMotCles = partieMotCles.concat(`${maisonEditionEntree}|`);
            partieCriteres = partieCriteres.concat("maisonEdition|");
        }

        //Categorie
        var categorieSpecification = document.getElementById("specificationCategorie"); 
        var categorieEntree = categorieSpecification.value; // Récupérer la valeur de la barre de recherche

        if (categorieEntree != "") {
            partieMotCles = partieMotCles.concat(`${categorieEntree}|`);
            partieCriteres = partieCriteres.concat("categorie|");
        }

        //Langue
        var langueSpecification = document.getElementById("specificationLangue"); 
        var langueEntree = langueSpecification.value; // Récupérer la valeur de la barre de recherche

        if (langueEntree != "") {
            partieMotCles = partieMotCles.concat(`${langueEntree}|`);
            partieCriteres = partieCriteres.concat("langue|");
        }

        //Type livre
        var typeLivreSpecification = document.getElementById("specificationTypeLivre"); 
        var typeLivreEntree = typeLivreSpecification.value; // Récupérer la valeur de la barre de recherche

        if (typeLivreEntree != "") {
            partieMotCles = partieMotCles.concat(`${typeLivreEntree}|`);
            partieCriteres = partieCriteres.concat("typeLivre|");
        }

        //Prix minimum
        var prixMinSpecification = document.getElementById("specificationPrixMin"); 
        var prixMinEntree = prixMinSpecification.value; // Récupérer la valeur de la barre de recherche

        if (prixMinEntree != "") {
            partieMotCles = partieMotCles.concat(`${prixMinEntree}|`);
            partieCriteres = partieCriteres.concat("prixMin|");
        }

        //Prix maximum
        var prixMaxSpecification = document.getElementById("specificationPrixMax"); 
        var prixMaxEntree = prixMaxSpecification.value; // Récupérer la valeur de la barre de recherche

        if (prixMaxEntree != "") {
            partieMotCles = partieMotCles.concat(`${prixMaxEntree}|`);
            partieCriteres = partieCriteres.concat("prixMax|");
        }


        // Utiliser la valeur dans l'URL pour l'action Index
        window.location.href = `/Recherche/Index?${partieMotCles}&${partieCriteres}`;
    }
</script>