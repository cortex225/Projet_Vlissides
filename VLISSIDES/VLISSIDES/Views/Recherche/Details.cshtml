@using VLISSIDES.ViewModels.Recherche;
@model DetailsLivreVM
@{
}


<link rel="stylesheet" href="~/css/Details.css">
<div id="detailsDivPrincipal">
    <input type="hidden" id="viewModelId" name="viewModelId" value="@Model.Id" />
    <div id="DetailsDIV">
        <img id="DetailsIMG" src="@Model.Couverture"/>
    </div>

    <div id="DetailsInfo">
        <h2>@Model.Titre</h2>

        <div id="checkboxTypeLivre">

        </div>
        @foreach (var type in Model.LivreTypeLivres)
        {
            <p>Prix @Html.DisplayFor(modelItem => type.TypeLivre.Nom) : @Html.DisplayFor(modelItem => type.Prix) $</p>
        }
        <p>Auteur(s): @Model.lAuteur.NomAuteur </p>
        <p>Catégorie(s): @Model.laCategorie.Nom </p>
        <p>Date publication: @Model.DatePublication</p>
        <p>Éditeur: @Model.maisonEdition.Nom</p>
        <p>Nombre de pages: @Model.NbPages</p>
        <strong>Résumé:</strong>
        <p>@Model.Resume</p>
        <br/>
    </div>
    <div>
        @foreach (var t in Model.LivreTypeLivres)
        {
            @if (t.TypeLivreId == "1")//1 = "Neuf"
            {
                <br />
                @if (Model.NbExemplaires > 0)
                {
                    <form>
                        @Html.AntiForgeryToken()
                        <p style="font-weight: bold;">En stock (@Model.NbExemplaires restants)</p>
                        <div class="btn-group" role="group" aria-label="Basic example">

                            <a id="ajouterNeuf" class="btn btn-primary btnPanier">
                                <i class="fa-solid fa-basket-shopping"></i>Ajouter au panier (Neuf)
                            </a>
                            <input type="number" id="quantite" name="quantite" min="1" max="@Model.NbExemplaires" step="1" value="1">
                        </div>
                    </form>
                }
                else
                {
                    <p style="font-weight: bold; color: red;">Livre neuf en rupture de stock</p>
                }
            }
            @if (t.TypeLivreId == "2")//2 = "Numérique"
            {
                <form>
                    @Html.AntiForgeryToken()
                    <a href="#" id="ajouterNumerique" class="btn btn-primary btnPanier">
                        <i class="fa-solid fa-basket-shopping"></i>Ajouter au panier (Numérique)
                    </a>
                </form>
            }
        }
    </div>
</div>
<script type="text/javascript">
    var ajouterNeuf = document.getElementById("ajouterNeuf");
    if (ajouterNeuf) {
        ajouterNeuf.addEventListener("click", ajouterLivreNeufDetails);
    }
    var ajouterNumerique = document.getElementById("ajouterNumerique");

    if (ajouterNumerique) {
        ajouterNumerique.addEventListener("click", ajouterLivreNumeriqueDetails);
    }

    async function ajouterLivreNeufDetails(){

        var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

        var quantitee = document.getElementById("quantite").value;

        var viewModelId = document.getElementById("viewModelId").value;

        fetch('/Panier/AjouterPanier', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            },
            body: JSON.stringify({
                livreAjouteId: viewModelId,
                quantitee: quantitee,
                typeId: "1"
            })
        })
        .then(response => {
            // Vérifier si la réponse est au format JSON
            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
                // Traiter les données JSON
                console.log(data);
        })
        .catch(error => {
            // Gérer les erreurs
            console.error("Erreur lors de la requête FETCH:", error);
        });
    }

    async function ajouterLivreNumeriqueDetails(){

        var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

        var viewModelId = document.getElementById("viewModelId").value;

        fetch('/Panier/AjouterPanier', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            },
            body: JSON.stringify({
                livreAjouteId: viewModelId,
                quantitee: null,
                typeId: "2"
            })
        })
        .then(response => {
            // Vérifier si la réponse est au format JSON
            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
                // Traiter les données JSON
                console.log(data);
        })
        .catch(error => {
            // Gérer les erreurs
            console.error("Erreur lors de la requête FETCH:", error);
        });
    }
</script>