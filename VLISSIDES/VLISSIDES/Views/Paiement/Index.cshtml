@model VLISSIDES.ViewModels.Paiement.StripePaiementVM
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Paiement";
    var myURL = Context.Request.Host.Value;
    var BASE_URL_RAZOR = Url.Content("~");
}


<div class="m-4">
    <div class="d-flex justify-content-center">
        <div class="w-50">
            <div class="stepper d-flex justify-content-between">
                <button id="step1" type="button" class="btn btn-default btn-circle btnStepper" onclick="stepperAdresse()">
                    1
                </button>

                <button id="step2" type="button" class="btn btn-default btn-circle btnStepper" onclick="stepperInfoPaiement()">
                    2
                </button>

                <button id="step3" type="button" class="btn btn-default btn-circle btnStepper" onclick="stepperConfirmation()">
                    3
                </button>
            </div>

            <div class="hrDiv">
                <hr/>
            </div>
        </div>
    </div>


    <div class="m-4">
        <div id="adressePage">
            <h2>Adresse</h2>
            <div class="w-50 mt-4">
                <h4 data-bs-toggle="collapse" data-bs-target="#adressesCollapse">
                    Adresses enregistrées 
                    <i id="adressesChevron" class="fa-solid fa-chevron-down fa-lg"></i>
                </h4>
                <div id="adressesCollapse" class="collapse">
                    <div class="list-group" id="list-tab" role="tablist">
                        <div id="newAdress" class="card list-group-item list-group-item-action d-flex align-content-center mb-2 mx-3" data-toggle="list" onclick="selectAdresse('newAdress', event)">
                            <p>
                                <i class="fa-solid fa-plus"></i>
                                Nouvelle adresse
                            </p>
                        </div>
                    
                        @if(Model.Adresse.AdressesDeLivraison is not null)
                        {
                            @foreach (var adresse in Model.Adresse.AdressesDeLivraison)
                            {
                                <div id="adresse @adresse.Id" class="card list-group-item list-group-item-action d-flex align-content-center mb-2 mx-3" data-toggle="list" onclick="selectAdresse('@adresse.Id', event)">
                                    <p>#@adresse.NoApartement - @adresse.NoCivique @adresse.Rue @adresse.Ville @adresse.Province @adresse.Pays - @adresse.CodePostal</p>
                                </div>
                            }
                        }                      
                    </div>
                </div>
            </div>

            <hr />
            <form enctype="multipart/form-data" method="post" id="adressePaiement">
                @* @Html.AntiForgeryToken() *@
                <div class="rcorners m-2 p-4 overflow-hidden">
                    <h5 class="my-2">Adresse ligne 1</h5>
                    <div class="row" onclick="selectAjouterAdresse()">

                        <div class="col-2 ">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.NoCivique" class="control-label mb-2"></label>
                                <input id="inputNoCiv" asp-for="Adresse.NoCivique" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.NoCivique)"/>
                                <span asp-validation-for="Adresse.NoCivique" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-10">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.Rue" class="control-label mb-2"></label>
                                <input id="inputRue" asp-for="Adresse.Rue" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.Rue)" />
                                <span asp-validation-for="Adresse.Rue" class="text-danger"></span>
                            </div>
                        </div>

                    </div>
                    <h5 class="my-2">Adresse ligne 2</h5>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.NoApartement" class="control-label mb-2"></label>
                                <input id="inputNoApp" asp-for="Adresse.NoApartement" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.NoApartement)" />
                                <span asp-validation-for="Adresse.NoApartement" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-2">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.CodePostal" class="control-label mb-2"></label>
                                <input id="inputCodePost" asp-for="Adresse.CodePostal" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.CodePostal)" />
                                <span asp-validation-for="Adresse.CodePostal" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col"></div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.Ville" class="control-label mb-2"></label>
                                <input id="inputVille" asp-for="Adresse.Ville" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.Ville)" />
                                <span asp-validation-for="Adresse.Ville" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.Province" class="control-label mb-2"></label>
                                <input id="inputProvince" asp-for="Adresse.Province" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.Province)" />
                                <span asp-validation-for="Adresse.Province" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group form-group-static">
                                <label asp-for="Adresse.Pays" class="control-label mb-2"></label>
                                <input id="inputPays" asp-for="Adresse.Pays" class="form-control" type="text" placeholder="@Html.DisplayFor(model => model.Adresse.Pays)" />
                                <span asp-validation-for="Adresse.Pays" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                    <div class="navigationButtons my-4">
                        <button id="checkout-button" class="btn btn-primary btn-md float-end mt-6 mb-0 mx-3" onclick="enregistrerAdresse()">Procéder au paiement</button>
                        <button class="btn btn-primary btn-md float-end mt-6 mb-0" onclick="location.href='@Url.Action("Index", "Panier")'" type="button">Retour au panier</button>

                    </div>
                </div>
            </form>
        </div>

        <div id="paiementPage" class="d-none">
            <div class="rcorners m-2 p-4 overflow-hidden d-flex justify-content-center mx-auto my-auto" style="width: fit-content">

                <div class="navigationButtons my-4">
                    <h3 class="d-flex justify-content-center text-center ">
                        Création de la session de paiement en cours...
                    </h3>
                    @* //Creation d'un loader *@
                    <div class="spinner-border text-primary d-flex justify-content-center mx-auto mt-4 mb-4" role="status" style="width: 4rem; height: 4rem;">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script>
        //Script pour URL
        const BASE_URL = @Json.Serialize(BASE_URL_RAZOR);

    </script>

    <script>
        function enregistrerAdresse() {
            var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

            var form = document.getElementById("adressePaiement");
            var data = new FormData(form);
            console.log(data);
            fetch(BASE_URL + '/Paiement/EnregistrerAdresse', {
                method: 'POST',
                headers: { 'RequestVerificationToken': csrfToken },
                body: data,
            }).then(function (response) {
                console.log(response);
                return response.text();
            })
            // .then((result) => {
            //     document.querySelector("body").innerHTML = result;
            // })
            .catch(function (error) {
                console.error('Error:', error);
            });
        }
    </script>

    <script type="text/javascript">
        //Chevron for collapse of adress
        var collapse = document.getElementById("adressesCollapse");
        console.log(collapse);
        collapse.addEventListener('show.bs.collapse', function () {
            var icon = document.getElementById("adressesChevron");
            icon.className = "fa-solid fa-chevron-up fa-lg";
        });
        collapse.addEventListener('hide.bs.collapse', function () {
            var icon = document.getElementById("adressesChevron");
            icon.className = "fa-solid fa-chevron-down fa-lg";
        });
    </script>
    <script type="text/javascript">
        var checkoutButton = document.getElementById('checkout-button');
        function createCheckoutSession() {
            var stripe = Stripe('pk_test_51O3gRDAIrJUcHyNnVbRxxrTEmN0ndzgrocNP008WZgRBHCFJNXhNXnXYyfxU1im6XjmLPKmJT1Tq64eNf5vIysOu00LWHU5Ohx');

            return fetch(BASE_URL + '/Paiement/CreateCheckoutSession', {
                method: 'POST',
            }).then(function (response) {
                return response.json();
            }).then(function (session) {
                return stripe.redirectToCheckout({ sessionId: session.id });
            }).then(function (result) {

                if (result.error) {
                    alert(result.error.message);
                }
            }).catch(function (error) {
                console.error('Error:', error);
            });
        }
        checkoutButton.addEventListener('click', function () {
            createCheckoutSession();
        });
    </script>


    <script src="https://js.stripe.com/v3/"></script>

    <script type="text/javascript">
        step1 = document.getElementById("step1");
        step2 = document.getElementById("step2");
        step3 = document.getElementById("step3");

        adressePage = document.getElementById("adressePage");
        paiementPage = document.getElementById("paiementPage");
        confirmationPage = document.getElementById("confirmationPage");

        step1.style.backgroundColor = "#3B71CA";
        step1.style.color = "white";

        function stepperAdresse() {
            step1.style.backgroundColor = "#3B71CA";
            step1.style.color = "white";

            step2.style.backgroundColor = "white";
            step2.style.color = "#4F4F4F";

            step3.style.backgroundColor = "white";
            step3.style.color = "#4F4F4F";

            adressePage.className = "";
            paiementPage.className = "d-none";
            confirmationPage.className = "d-none";

        }
        function stepperInfoPaiement() {
            step1.style.backgroundColor = "#14A44D";
            step1.style.color = "white";

            step2.style.backgroundColor = "#3B71CA";
            step2.style.color = "white";

            step3.style.backgroundColor = "white";
            step3.style.color = "#4F4F4F";

            adressePage.className = "d-none";
            paiementPage.className = "";
            confirmationPage.className = "d-none";
            createCheckoutSession();
        }
        function stepperConfirmation() {
            step1.style.backgroundColor = "#14A44D";
            step1.style.color = "white";

            step2.style.backgroundColor = "#14A44D";
            step2.style.color = "white";

            step3.style.backgroundColor = "#3B71CA";
            step3.style.color = "white";

            adressePage.className = "d-none";
            paiementPage.className = "d-none";
            confirmationPage.className = "";


        }
    </script>

    <script>
        function selectAjouterAdresse() { //JS Code from bootstrap to select an item in the list-group-item
            var newAdresse = document.querySelector('#newAdress')
            var tab = new bootstrap.Tab(newAdresse)

            tab.show()
        }
        function selectAdresse(id = "", ev) {
            var noApp = document.getElementById("inputNoApp");
            var noCiv = document.getElementById("inputNoCiv");
            var rue = document.getElementById("inputRue");
            var codePost = document.getElementById("inputCodePost");
            var ville = document.getElementById("inputVille");
            var province = document.getElementById("inputProvince");
            var pays = document.getElementById("inputPays");

            if (id != "newAdress") {
                ev.preventDefault();

                var apiUrl = BASE_URL + '/Paiement/AdresseSelection?id=' + id;

                // Effectue une requête GET à l'API
                fetch(apiUrl, {
                    method: "GET"
                }).then((response) => {
                    // Convertit la réponse en texte
                    return response.json();
                }).then((result) => {
                    // Met à jour le contenu de la div avec le résultat
                    noApp.value = result.noApartement;
                    noCiv.value = result.noCivique;
                    rue.value = result.rue;
                    codePost.value = result.codePostal;
                    ville.value = result.ville;
                    province.value = result.province;
                    pays.value = result.pays;
                }).catch(error => {
                    // Affiche une erreur dans la console en cas d'échec de la requête
                    console.error('Erreur lors de la récupération de la liste des auteurs', error);
                });
            }else {
                noApp.value = "";
                noCiv.value = "";
                rue.value = "";
                codePost.value = "";
                ville.value = "";
                province.value = "";
                pays.value = "";
            }
            
        }
    </script>
}

<style>
    .btn-circle.btnStepper {
        width: 50px;
        height: 50px;
        padding: 10px 16px;
        border-radius: 35px;
        font-size: 20px;
        line-height: 1.33;
        background-color: white;
        z-index: 10;
    }

    .btnStepper:active {
        background-color: grey !important;
    }
    .btn-circle {
        width: 30px;
        height: 30px;
        padding: 6px 0px;
        border-radius: 15px;
        text-align: center;
        font-size: 12px;
        line-height: 1.42857;
    }

    .hrDiv{
        position: relative;
        top: -40px;
        z-index: 0;
    }

    .stepper{
        z-index: 10;
    }

    .rcorners {
        border-radius: 25px;
        background-color: white;

    }

</style>