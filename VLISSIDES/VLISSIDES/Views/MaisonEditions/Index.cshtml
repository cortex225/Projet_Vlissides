@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model VLISSIDES.ViewModels.MaisonEditions.MaisonEditionsIndexVM


<div class="d-block p-4 p-4">
    <div class="mb-4">
        <h1>Gestion des maisons d'éditions</h1>
    </div>
    <!--Début : Ajouter maison edition-->
    <div class="container-fluid">

        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#champAjouter">
            Ajouter une maison d'édition
        </button>

        <form class="collapse" id="champAjouter" enctype="multipart/form-data">
            <br/>
            @* @Html.AntiForgeryToken() *@
            @*<label asp-for="MaisonEditionsAjouterVM.Nom" class="control-label"></label>*@
            <div class="input-group">
                <input class="form-control" asp-for="MaisonEditionsAjouterVM.Nom" id="inputNom" placeholder="Nom"/>
                <span asp-validation-for="MaisonEditionsAjouterVM.Nom" class="text-danger"></span>
                <button class="btn btn-primary p-2" type="button" onclick="AjouterMaisonEdition()" data-toggle="tooltip" title="Ajouter le livre">
                    Ajouter
                </button>
            </div>

        </form>

    </div>
    <br/>
    <!--Fin : Ajouter maison edition-->
    <div class="mb-4">
        <h3>Liste des maisons d'éditions</h3>
        <div class="row">
            <div class="list-group col-6" id="list-tab" role="tablist">

                @foreach (var item in Model.ListeMaisonEditions)

                {
                    <div id="@item.Id" class="card list-group-item list-group-item-action mb-2 mx-3" data-toggle="list" onclient onclick="AfficherMaisonsEditionsLivres('@item.Id')">
                        <div class="card-body row align-items-center p-0">
                            <div class="col-9 text-center">
                                <input type="text" asp-for="@item.Nom" class="form-control formGroupExampleInput" placeholder="@Html.DisplayFor(modelItem => item.Nom)">
                            </div>
                            <div class="col-3 text-center d-flex flex-row justify-content-around h-40">
                                @* container-fluid temporaire, permet d'avoir des deux boutons qui ne sortent pas du div *@

                                <button id="saveButton @item.Id" type="button" class="btn btn-success" @* onclick=" saveQuantite('@item.Id', '@item.Nom') disableButton('@item.Id')" disabled="document.getElementById(@item.Id).value<0||document.getElementById(@item.Id).value = @item.Nom" *@>
                                    Sauvegarder


                                </button>
                                <button type="button" class="btn btn-danger p-2" @* onclick="SupprimerLivre(`@item.Id`)" *@>
                                    <span class="fa-solid fa-trash fa-2x"></span>
                                </button>

                            </div>
                        </div>
                    </div>
                }

            </div>
            <div class="ListeMaisonsEditionsLivre col-6" id="divListeMaisonEditionLivres">
                @foreach (var item in Model.ListeMaisonEditions)
                {
                    <div id="Liste_@item.Id" class="visually-hidden">
                        <p>@item.Nom</p>


                        @if (item.Livres.Count != 0)
                        {
                            
                        <ul>
                            @foreach (var livre in item.Livres)
                            {
                                <li>@livre.Titre</li>
                            }
                        </ul>
                        }
                        else
                        {
                            <p>pas de livres</p>
                        }


                    </div>
                }

            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function AjouterMaisonEdition() {
        var form = document.getElementById("champAjouter");
        var data = new FormData(form);
        
        //var csrfToken = form.querySelector(­'[name="__RequestVerificationToken"]').value;
        fetch('Ajouter', {
            method: "POST",
            body: data
            // headers: {
            //    RequestVerificationToken: csrfToken,
            // },
        }).catch(error => {
            console.error('Échec du fetch pour ajouter maison edition', error);
        }).then((response) => {
            
        });
        form.reset();
        
        alert("La maison d'édition a été ajouté, veuillez rafraichir la page");
    }
</script>
<script type="text/javascript">
    function hideall() {
        divListes = document.getElementById("divListeMaisonEditionLivres").childNodes;
        divListes.forEach((element) => { element.className = "visually-hidden" });
    }
    function AfficherMaisonsEditionsLivres(id="") 
    {
        hideall();
        
        var liste = document.getElementById("Liste_"+id);
        liste.className= "";        
    }
</script>