@model VLISSIDES.ViewModels.Panier.PanierVM
@{
    ViewData["Title"] = "Panier";
    var myURL = Context.Request.Host.Value;
    var BASE_URL_RAZOR = Url.Content("~");
}

<div class="m-4">
    <h1>Votre panier</h1>

    <div class="container">
        <div class="row">
            <div class="col">
                <h3 class="text-center">Articles</h3>
                @foreach(var item in Model.ListeArticles)
                {
                    <partial name="../Shared/PartialViews/Panier/_PanierItem.cshtml" model="@article" />
                }
                
            </div>

            <div class="col">
                <h3 class="text-center">Facture</h3>
                <div id="facture" class="bg-white mh-100 p-xl-4">
                    @Html.Partial("PartialViews/Panier/_FacturePartial")
                </div>

                <div class="d-flex flex-row justify-content-end mt-4">
                    <button class="btn btn-primary">Passer à la commande</button>
                </div>
            </div>
        </div>       
    </div>
</div>

<!--Fonctionalite des boutons *-->
<style>
    /*Pour cacher les boutons de sauvegarde --- Ne fonctionne pas dans un fichier css*/
    .saveButton {
        visibility: hidden;
    }
</style>
<script type="text/javascript" src="~/js/DynamicSaveButton.js" asp-append-version="true"></script>
<!--Fin pour Fonctionalite des boutons-->

<script>
    //Script pour URL
    const BASE_URL = @Json.Serialize(BASE_URL_RAZOR);
</script>

<script type="text/javascript">
    cbDonEco = document.getElementById("cbDonEco");
    fieldDonEco = document.getElementById("prixDonEco");
    prixTotal = document.getElementById("prixTotal");

    function changerPrixDon() {
        if (cbDonEco.checked) {
            fieldDonEco.innerText = "+5$";
            prixTotal.innerText = (parseFloat((prixTotal.innerText).replace(',', '.')) + 5.0).toFixed(2).toString().replace('.', ',');

        } else {
            fieldDonEco.innerText = "";
            prixTotal.innerText = (parseFloat((prixTotal.innerText).replace(',', '.')) - 5.0).toFixed(2).toString().replace('.', ',');
        }
    }
</script>

<script type="text/javascript">
    function AfficherFacture() {
        fetch(BASE_URL + "/Panier/AfficherFacture", {
            method: "GET"
        }).then((response) => {
            // Convertit la réponse en texte
            return response.text();
        }).then((result) => {
            // Met à jour le contenu de la div avec le résultat
            var div = document.getElementById("facture");
            div.innerHTML = result;
        }).catch(error => {
            // Affiche une erreur dans la console en cas d'échec de la requête
            console.error('Erreur lors de la récupération de la liste des maisons d\'édition', error);
        });
    }   
    
    AfficherFacture();
    changerPrixDon();
</script>

<script type="text/javascript">
    function ModifierQuantite(id = "", quantite = "") {
        fetch(BASE_URL + '/Panier/ModifierQuantite?id=' + id + '&quantite=' + document.getElementById(id + " quantite").value, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).catch(error => console.error('Échec du fetch pour modifier la quantite'))
            .then((response) => { 
                disableButton(id);
                AfficherFacture();
            });
    }
            
        }  
    }

    async function supprimerLivre(vmIdPanier) {
        console.log("Patate " + vmIdPanier);

        //var button = event.target;
        //var viewModelId = button.getAttribute("data-vmIdPanier");

        var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;


        fetch(`/Panier/SupprimerPanier?id=${vmIdPanier}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            }
        })
        .then(response => {
            // Vérifier si la réponse est au format JSON
            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            // Traiter les données JSON
            console.log(data);
        })
        .catch(error => {
            // Gérer les erreurs
            console.error("Erreur lors de la requête FETCH:", error);
        });
        location.reload();
    }
</script>

