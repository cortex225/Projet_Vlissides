@model VLISSIDES.ViewModels.Panier.PanierVM
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Panier";
    var myURL = Context.Request.Host.Value;
    var BASE_URL_RAZOR = Url.Content("~");
}

@*********************@
@* Modals *@
@*********************@

<div class="modal fade modal-dialog-centered " tabindex="-1" role="dialog" aria-hidden="true" id="ModalId"
     style="display: none;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content ">
        </div>
    </div>
</div>

<div class="m-4">
    <h1>Votre panier</h1>

    <div class="container">
        <div class="row">
            <div class="col">
                <h3 class="text-center">Articles</h3>
                @foreach (var item in Model.ListeArticles)
                {
                    <partial name="../Shared/PartialViews/Panier/_PanierItem.cshtml" model="@item"/>
                }

            </div>

            <div class="col">
                <h3 class="text-center">Facture <span class="text-danger">(sans taxe)</span></h3>
                <div id="facture" class="bg-white mh-100 p-xl-4">
                    @* @Html.Partial("PartialViews/Panier/_FacturePartial") *@
                    <partial name="PartialViews/Panier/_FacturePartial"/>
                </div>

                <div class="d-flex flex-row justify-content-end mt-4">
                    <button class="btn btn-primary" onclick="PasserAuPaiement()">Passer à la commande</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Fonctionalite des boutons *-->
<style>
    /*Pour cacher les boutons de sauvegarde --- Ne fonctionne pas dans un fichier css*/
    .saveButton {
        visibility: hidden;
    }

    #ajouterCodePromo{
        margin-top: 12px;
        background: #E1E1E1;
    }

    #inputCodePromoDiv{
        margin-top: 12px;
    }

    .hideInputCodePromo{
        visibility: hidden;
        height: 0px;
    }
</style>
<script type="text/javascript" src="~/js/DynamicSaveButton.js" asp-append-version="true"></script>
<!--Fin pour Fonctionalite des boutons-->

<script>
    //Script pour URL
    const BASE_URL = @Json.Serialize(BASE_URL_RAZOR);
</script>

<script src="~/js/Panier/Index.js" asp-append-version="true"></script>
<script type="text/javascript" asp-append-version="true">
 function AfficherFacture(callback) {
        fetch(BASE_URL + "/Panier/AfficherFacture", {
            method: "GET"
        }).then((response) => {
            // Convertit la réponse en texte
            return response.text();
        }).then((result) => {
            // Met à jour le contenu de la div avec le résultat
            var div = document.getElementById("facture");
            div.innerHTML = result;

                if(callback){
                    callback();
                }

        }).catch(error => {
            // Affiche une erreur dans la console en cas d'échec de la requête
            console.error('Erreur lors de la récupération de la liste des articles', error);
        });
    }
</script>

<script type="text/javascript" asp-append-version="true">
    function ModifierQuantite(id = "", quantite = "") {
        fetch(BASE_URL + '/Panier/ModifierQuantite?id=' + id + '&quantite=' + document.getElementById(id + " quantite").value, {
            method: 'POST',
            // headers: {
            //     'Accept': 'application/json',
            //     'Content-Type': 'application/json'
            // }
        }).then((response) => { 
                disableButton(id);
                AfficherFacture();
                getNbArticles();
        }).catch(error => { console.error('Échec du fetch pour modifier la quantite'); });
    }
            
    async function supprimerLivre(vmIdPanier) {


        var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;


        fetch(BASE_URL + `/Panier/SupprimerPanier?id=${vmIdPanier}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            }
        })
        .then(response => {
            // Vérifier si la réponse est au format JSON
            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }
            //remove element article HTML
            if (response.ok ) {
                var article = document.getElementById(vmIdPanier);
                article.remove();
                $('#ModalId').modal('hide'); // Ferme la modale
                getNbArticles();

            }
            return response.text();
        })
        .then(data => {
            AfficherFacture();
        })
        .catch(error => {
            // Gérer les erreurs
            console.error("Erreur lors de la requête FETCH:", error);
        });
        
    }

    function AfficherFieldCodePromo() {
        var p = document.getElementById("inputCodePromoDiv");
        p.classList.toggle('hideInputCodePromo');
    }
</script>
<script>
function getNbArticles() {
$(document).ready(function () {
        $.ajax({
            url: BASE_URL +"/Panier/NbArticles",
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#nbArticles").html(data).animate({fontSize: "30px"}, 1000);
            }
        });

    }
);
}
</script>
<script>
    function PasserAuPaiement() {
        var cbDonEco = document.getElementById("cbDonEco");
        var radioButtons = document.querySelectorAll('input[name="flexRadioDefault"]');
        var selectedValue;
        if (cbDonEco.checked){
            for(var radioButton of radioButtons){
                if (radioButton.checked) {
                    selectedValue = radioButton.value;
                }
            }
        }

        console.log(selectedValue);
        fetch(BASE_URL + "/Panier/PasserAuPaiement?numero=" + selectedValue, {
            method: "GET",

        }).then((response) => {
            return response.text();
        }).then((result)=>{
            //Créer une nuvelle session de paiement
        createCheckoutSession();
        }).catch(error => {
            console.error(error.message);
        });
    }
</script>

<script type="text/javascript">
       function createCheckoutSession() {
            var data = {
                userId: '@UserManager.GetUserId(User)',
                customerStripeId: '@Model.CustomerStripeId'
           };
        fetch(BASE_URL + '/Paiement/CreateCheckoutSession', {
               method: 'POST',
                  headers: {
                     'Content-Type': 'application/json'
                },
               body: JSON.stringify(data)
           })
           .then(response => response.json())
           .then(data => {
               if (data.id) {
                   var stripe = Stripe('pk_test_51O3gRDAIrJUcHyNnVbRxxrTEmN0ndzgrocNP008WZgRBHCFJNXhNXnXYyfxU1im6XjmLPKmJT1Tq64eNf5vIysOu00LWHU5Ohx');
                   stripe.redirectToCheckout({ sessionId: data.id });
               } else {
                   console.error('Erreur lors de la création de la session de paiement');
               }
           })
           .catch(error => {
               console.error('Erreur lors de la communication avec le serveur:', error);
           });
       }

    </script>

<script src="https://js.stripe.com/v3/" asp-append-version="true"></script>