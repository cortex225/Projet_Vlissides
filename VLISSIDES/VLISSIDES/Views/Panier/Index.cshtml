@model VLISSIDES.ViewModels.Panier.PanierVM
@{
    ViewData["Title"] = "Panier";
    var myURL = Context.Request.Host.Value;
    var BASE_URL_RAZOR = Url.Content("~");
}

@*********************@
@* Modals *@
@*********************@

<div class="modal fade modal-dialog-centered " tabindex="-1" role="dialog" aria-hidden="true" id="ModalId"
     style="display: none;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content ">
        </div>
    </div>
</div>

<div class="m-4">
    <h1>Votre panier</h1>

    <div class="container">
        <div class="row">
            <div class="col">
                <h3 class="text-center">Articles</h3>
                @foreach(var item in Model.ListeArticles)
                {
                    <partial name="../Shared/PartialViews/Panier/_PanierItem.cshtml" model="@item" />
                }
                
            </div>

            <div class="col">
                <h3 class="text-center">Facture <span class="text-danger">(sans taxe)</span></h3>
                <div id="facture" class="bg-white mh-100 p-xl-4">
                    @* @Html.Partial("PartialViews/Panier/_FacturePartial") *@
                    <partial name="PartialViews/Panier/_FacturePartial"/>
                </div>

                <div class="d-flex flex-row justify-content-end mt-4">
                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Index","Paiement")'">Passer à la commande</button>
                </div>
            </div>
        </div>       
    </div>
</div>
<form id="payment-form" action="/api/stripe/CompleteOrder" method="post">
  <div id="card-element">
    <!-- Un élément Stripe sera inséré ici. -->
  </div>

  <!-- Affichera les erreurs de carte -->
  <div id="card-errors" role="alert"></div>

  <button id="submit-button">Soumettre</button>
</form>

<!--Fonctionalite des boutons *-->
<style>
    /*Pour cacher les boutons de sauvegarde --- Ne fonctionne pas dans un fichier css*/
    .saveButton {
        visibility: hidden;
    }
</style>
<script type="text/javascript" src="~/js/DynamicSaveButton.js" asp-append-version="true"></script>
<!--Fin pour Fonctionalite des boutons-->

<script>
    //Script pour URL
    const BASE_URL = @Json.Serialize(BASE_URL_RAZOR);
</script>

<script src="~/js/Panier/Index.js" asp-append-version="true">

    
</script>

<script type="text/javascript">
    function AfficherFacture() {
        fetch(BASE_URL + "/Panier/AfficherFacture", {
            method: "GET"
        }).then((response) => {
            // Convertit la réponse en texte
            return response.text();
        }).then((result) => {
            // Met à jour le contenu de la div avec le résultat
            var div = document.getElementById("facture");
            div.innerHTML = result;
        }).catch(error => {
            // Affiche une erreur dans la console en cas d'échec de la requête
            console.error('Erreur lors de la récupération de la liste des maisons d\'édition', error);
        });
    }   
    
    AfficherFacture();
    changerPrixDon();
</script>

<script type="text/javascript">
    function ModifierQuantite(id = "", quantite = "") {
        fetch(BASE_URL + '/Panier/ModifierQuantite?id=' + id + '&quantite=' + document.getElementById(id + " quantite").value, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).catch(error => console.error('Échec du fetch pour modifier la quantite'))
            .then((response) => { 
                disableButton(id);
                AfficherFacture();
            });
    }
            
    async function supprimerLivre(vmIdPanier) {
        //var button = event.target;
        //var viewModelId = button.getAttribute("data-vmIdPanier");

        var csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;


        fetch(BASE_URL + `/Panier/SupprimerPanier?id=${vmIdPanier}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            }
        })
        .then(response => {
            // Vérifier si la réponse est au format JSON
            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }
            //remove element article HTML
            if (response.ok ) {
                var article = document.getElementById(vmIdPanier);
                article.remove();
                $('#ModalId').modal('hide'); // Ferme la modale     
            }
            return response.text();
        })
        .then(data => {
            AfficherFacture();
        })
        .catch(error => {
            // Gérer les erreurs
            console.error("Erreur lors de la requête FETCH:", error);
        });
        
    }
</script>

<script>
// Exemple avec Stripe.js pour créer un token
var stripe = Stripe('pk_live_51O3gRDAIrJUcHyNniB8jyt0NHebRxEfs1YdsvdjjatTtyvpA9vDdViZbQYO6cdkTyWF9BoLT7H8cARXJqxt7KAl600ExOtKrvT');
var elements = stripe.elements();

// Créez une instance d'élément de carte
var card = elements.create('card');

// Ajoutez une instance d'élément de carte à un conteneur HTML vide
card.mount('#card-element');

// Créez un token ou affichez une erreur lors de la soumission du formulaire
var form = document.getElementById('payment-form');
form.addEventListener('submit', async function(event) {
  event.preventDefault();

  const {token, error} = await stripe.createToken(card);

  if (error) {
    // Informez l'utilisateur s'il y a eu une erreur
    var errorElement = document.getElementById('card-errors');
    errorElement.textContent = error.message;
  } else {
    // Envoyez le token à votre serveur
    stripeTokenHandler(token);
  }
});

function stripeTokenHandler(token) {
  // Insérez le token ID dans le formulaire pour qu'il soit soumis au serveur
  var form = document.getElementById('payment-form');
  var hiddenInput = document.createElement('input');
  hiddenInput.setAttribute('type', 'hidden');
  hiddenInput.setAttribute('name', 'stripeToken');
  hiddenInput.setAttribute('value', token.id);
  form.appendChild(hiddenInput);

  // Soumettez le formulaire
  form.submit();
}

</script>