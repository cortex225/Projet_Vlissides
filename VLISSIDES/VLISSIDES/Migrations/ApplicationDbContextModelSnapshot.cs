// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VLISSIDES.Data;

#nullable disable

namespace VLISSIDES.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LivrePromotions", b =>
                {
                    b.Property<string>("LivresId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PromotionsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LivresId", "PromotionsId");

                    b.HasIndex("PromotionsId");

                    b.ToTable("LivrePromotions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0",
                            ConcurrencyStamp = "32580db4-fe50-4271-acb3-1ab25577f343",
                            Name = "Employe",
                            NormalizedName = "EMPLOYE"
                        },
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "f6ce6f6e-f38a-4f20-89c3-fbc5dce97c18",
                            Name = "Membre",
                            NormalizedName = "MEMBRE"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "4620bdae-1f4f-48b1-9dc4-2181e69be021",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "0"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "0",
                            RoleId = "2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VLISSIDES.Models.Adresse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCivique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilisateurLivraisonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UtilisateurPrincipalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurLivraisonId");

                    b.HasIndex("UtilisateurPrincipalId")
                        .IsUnique()
                        .HasFilter("[UtilisateurPrincipalId] IS NOT NULL");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("VLISSIDES.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AdressePrincipaleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5aef00a-7526-4223-b395-afc397862e02",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Nom = "ADMIN",
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN@ADMIN.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP5A0+Sh49GqZJZev/DKqD7yieTvqVejrmGV0mV6PL5KNos4tLJnJL1tHceX7HezGA==",
                            PhoneNumberConfirmed = false,
                            Prenom = "Admin",
                            SecurityStamp = "128b2f2d-a705-45cd-a373-968b5ccc6c1b",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Auteur", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomAuteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auteurs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Excel 1",
                            NomAuteur = "Antoine de Saint-Exupéry"
                        },
                        new
                        {
                            Id = "Excel 2",
                            NomAuteur = "J.K. Rowling"
                        },
                        new
                        {
                            Id = "Excel 3",
                            NomAuteur = "George Orwell"
                        },
                        new
                        {
                            Id = "Excel 4",
                            NomAuteur = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = "Excel 5",
                            NomAuteur = "Umberto Eco"
                        },
                        new
                        {
                            Id = "Excel 6",
                            NomAuteur = "Jane Austen"
                        },
                        new
                        {
                            Id = "Excel 7",
                            NomAuteur = "Boris Vian"
                        },
                        new
                        {
                            Id = "Excel 8",
                            NomAuteur = "Victor Hugo"
                        },
                        new
                        {
                            Id = "Excel 9",
                            NomAuteur = "Stendhal"
                        },
                        new
                        {
                            Id = "Excel 10",
                            NomAuteur = "René Barjavel"
                        },
                        new
                        {
                            Id = "Excel 11",
                            NomAuteur = "Giuseppe Tomasi di Lampedusa"
                        },
                        new
                        {
                            Id = "Excel 12",
                            NomAuteur = "Bernard Werber"
                        },
                        new
                        {
                            Id = "Excel 13",
                            NomAuteur = "Herman Melville"
                        },
                        new
                        {
                            Id = "Excel 14",
                            NomAuteur = "Fiodor Dostoïevski"
                        },
                        new
                        {
                            Id = "Excel 15",
                            NomAuteur = "Mikhaïl Boulgakov"
                        },
                        new
                        {
                            Id = "Excel 16",
                            NomAuteur = "Patrick Süskind"
                        },
                        new
                        {
                            Id = "Excel 17",
                            NomAuteur = "Joseph Kessel"
                        },
                        new
                        {
                            Id = "Excel 18",
                            NomAuteur = "Albert Camus"
                        },
                        new
                        {
                            Id = "Excel 19",
                            NomAuteur = "Donna Tartt"
                        },
                        new
                        {
                            Id = "Excel 20",
                            NomAuteur = "Anne Frank"
                        },
                        new
                        {
                            Id = "Excel 22",
                            NomAuteur = "Homère"
                        },
                        new
                        {
                            Id = "Excel 23",
                            NomAuteur = "Ernest Hemingway"
                        },
                        new
                        {
                            Id = "Excel 24",
                            NomAuteur = "Helen Fielding"
                        },
                        new
                        {
                            Id = "Excel 25",
                            NomAuteur = "Aldous Huxley"
                        },
                        new
                        {
                            Id = "Excel 26",
                            NomAuteur = "Paulo Coelho"
                        },
                        new
                        {
                            Id = "Excel 27",
                            NomAuteur = "Oscar Wilde"
                        },
                        new
                        {
                            Id = "Excel 28",
                            NomAuteur = "Alexandre Dumas"
                        },
                        new
                        {
                            Id = "Excel 31",
                            NomAuteur = "Khaled Hosseini"
                        },
                        new
                        {
                            Id = "Excel 32",
                            NomAuteur = "Alain-Fournier"
                        },
                        new
                        {
                            Id = "Excel 33",
                            NomAuteur = "Kurt Cobain"
                        },
                        new
                        {
                            Id = "Excel 34",
                            NomAuteur = "Charles Baudelaire"
                        },
                        new
                        {
                            Id = "Excel 35",
                            NomAuteur = "Francis Ponge"
                        },
                        new
                        {
                            Id = "Excel 36",
                            NomAuteur = "Frères Grimm"
                        },
                        new
                        {
                            Id = "Excel 37",
                            NomAuteur = "Charles Perrault"
                        },
                        new
                        {
                            Id = "Excel 38",
                            NomAuteur = "Hans Christian Andersen"
                        },
                        new
                        {
                            Id = "Excel 39",
                            NomAuteur = "Anonyme (contes populaires)"
                        },
                        new
                        {
                            Id = "Excel 40",
                            NomAuteur = "Pierre Gripari"
                        },
                        new
                        {
                            Id = "Excel 42",
                            NomAuteur = "Catherine Gueguen"
                        },
                        new
                        {
                            Id = "Excel 43",
                            NomAuteur = "Pierre Rabhi"
                        },
                        new
                        {
                            Id = "Excel 44",
                            NomAuteur = "Audrey Akoun et Isabelle Pailleau"
                        },
                        new
                        {
                            Id = "Excel 45",
                            NomAuteur = "Anne Bérubé & Geneviève Racine"
                        },
                        new
                        {
                            Id = "Excel 46",
                            NomAuteur = "Audrey Zucchi"
                        },
                        new
                        {
                            Id = "Excel 48",
                            NomAuteur = "René Goscinny"
                        },
                        new
                        {
                            Id = "Excel 49",
                            NomAuteur = "Hergé"
                        },
                        new
                        {
                            Id = "Excel 50",
                            NomAuteur = "Art Spiegelman"
                        },
                        new
                        {
                            Id = "Excel 51",
                            NomAuteur = "Marjane Satrapi"
                        },
                        new
                        {
                            Id = "Excel 52",
                            NomAuteur = "Alan Moore"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Categorie", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Excel 34",
                            Description = "",
                            Nom = "Poésie"
                        },
                        new
                        {
                            Id = "Excel 42",
                            Description = "",
                            Nom = "Pédagogie"
                        },
                        new
                        {
                            Id = "Excel 43",
                            Description = "",
                            Nom = "Maternité"
                        },
                        new
                        {
                            Id = "Excel 48",
                            Description = "",
                            Nom = "BD"
                        },
                        new
                        {
                            Id = "1",
                            Description = "Une section dédiée à l'exploration des chefs-d'œuvre artistiques, des mouvements et des artistes qui ont marqué l'histoire.",
                            Nom = "Art"
                        },
                        new
                        {
                            Id = "2",
                            Description = "Plongez dans un monde de bien-être, d'esthétique et d'équilibre pour enrichir votre quotidien.",
                            Nom = "Art de vivre"
                        },
                        new
                        {
                            Id = "3",
                            Description = "De colorées bandes dessinées aux histoires captivantes pour les plus jeunes, sans oublier une touche d'humour.",
                            Nom = "BD, Jeunesse, Humour"
                        },
                        new
                        {
                            Id = "4",
                            Description = "Un vaste choix de narrations graphiques, des super-héros aux récits autobiographiques.",
                            Nom = "Bandes dessinées"
                        },
                        new
                        {
                            Id = "5",
                            Description = "Découvrez les vies fascinantes des personnalités qui ont façonné le monde.",
                            Nom = "Biographie"
                        },
                        new
                        {
                            Id = "6",
                            Description = "Voyagez dans des mondes lointains avec des histoires intemporelles, des fables et des légendes.",
                            Nom = "Conte"
                        },
                        new
                        {
                            Id = "7",
                            Description = "Des recettes alléchantes aux guides sommeliers, découvrez les saveurs du monde.",
                            Nom = "Cuisine – Vin"
                        },
                        new
                        {
                            Id = "8",
                            Description = "Approfondissez votre compréhension des sociétés contemporaines et de leurs nuances culturelles.",
                            Nom = "Culture et Société"
                        },
                        new
                        {
                            Id = "9",
                            Description = "Des ressources pour les linguistes, les étudiants et les éternels apprenants.",
                            Nom = "Dictionnaire – Langues – Éducation"
                        },
                        new
                        {
                            Id = "10",
                            Description = "Engagez-vous dans des réflexions profondes et argumentatives sur des enjeux contemporains.",
                            Nom = "Essai"
                        },
                        new
                        {
                            Id = "11",
                            Description = "Explorez le monde naturel, de la canopée de la jungle aux profondeurs des océans.",
                            Nom = "Faune – Flore"
                        },
                        new
                        {
                            Id = "12",
                            Description = "Évadez-vous avec des guides de voyage et des récits d'aventuriers des quatre coins du monde.",
                            Nom = "Géographie – Voyage"
                        },
                        new
                        {
                            Id = "13",
                            Description = "Démystifiez le monde des affaires, la complexité économique et les arcanes du droit.",
                            Nom = "Gestion – Économie – droit"
                        },
                        new
                        {
                            Id = "14",
                            Description = "Conseils et astuces pour naviguer dans la vie quotidienne, du bricolage à la gestion du temps.",
                            Nom = "Guide pratique"
                        },
                        new
                        {
                            Id = "15",
                            Description = "Immergez-vous dans les moments clés de l'histoire et les débats politiques actuels. ",
                            Nom = "Histoire"
                        },
                        new
                        {
                            Id = "16",
                            Description = "Pour un moment de détente, une collection de recueils drôles et de satires.",
                            Nom = "Humour"
                        },
                        new
                        {
                            Id = "17",
                            Description = "Restez à la pointe de la technologie avec des guides sur les logiciels, le codage et les innovations numériques.",
                            Nom = "Informatique"
                        },
                        new
                        {
                            Id = "18",
                            Description = "Une riche collection de classiques et de nouvelles œuvres, pour les amateurs de belle lettre.",
                            Nom = "Littérature"
                        },
                        new
                        {
                            Id = "19",
                            Description = "Inspirez-vous pour votre prochaine aventure, qu'elle soit en pleine nature ou dans une métropole animée.",
                            Nom = "Loisir, Tourisme, Nature"
                        },
                        new
                        {
                            Id = "20",
                            Description = "Des ressources pour les parents et ceux qui aspirent à le devenir, pour une vie familiale épanouie.",
                            Nom = "Maternité – Famille"
                        },
                        new
                        {
                            Id = "21",
                            Description = "Laissez-vous emporter par le rythme des vers, l'intensité du théâtre et la profondeur des essais.",
                            Nom = "Poésie – Théâtre – Essais"
                        },
                        new
                        {
                            Id = "22",
                            Description = "omprenez mieux la complexité de l'esprit humain et les clés d'une vie saine.",
                            Nom = "Psychologie – Santé"
                        },
                        new
                        {
                            Id = "23",
                            Description = "Explorez les croyances spirituelles du monde entier, des textes sacrés aux mystères ésotériques.",
                            Nom = "Religion – Ésotérisme"
                        },
                        new
                        {
                            Id = "24",
                            Description = "Voyagez dans des mondes parallèles, où l'imaginaire rencontre souvent la réflexion profonde.",
                            Nom = "Roman de science-fiction et fantastique"
                        },
                        new
                        {
                            Id = "25",
                            Description = "Des romans venus de France et d'ailleurs pour vous transporter dans de multiples univers narratifs.",
                            Nom = "Roman français et étranger "
                        },
                        new
                        {
                            Id = "26",
                            Description = "Plongez dans des enquêtes palpitantes, des énigmes à résoudre et des mystères à élucider.",
                            Nom = "Roman policier"
                        },
                        new
                        {
                            Id = "27",
                            Description = "Découvrez la richesse de la littérature québécoise, avec ses voix uniques et ses paysages envoûtants.",
                            Nom = "Roman québécois"
                        },
                        new
                        {
                            Id = "28",
                            Description = "Éclairez votre curiosité avec des textes scientifiques accessibles et informatifs.",
                            Nom = "Savoir Sciences"
                        },
                        new
                        {
                            Id = "29",
                            Description = "De la biologie à la physique, découvrez les dernières découvertes et théories.",
                            Nom = "Sciences"
                        },
                        new
                        {
                            Id = "30",
                            Description = "Des textes éclairants pour comprendre et explorer la diversité de la sexualité humaine.",
                            Nom = "Sexualité"
                        },
                        new
                        {
                            Id = "31",
                            Description = "Pour les passionnés de sport et les chercheurs d'activités, des histoires inspirantes aux guides pratiques.",
                            Nom = "Sport"
                        },
                        new
                        {
                            Id = "Sous-Catégorie Excel 43-1",
                            Description = "",
                            Nom = "Famille",
                            ParentId = "Excel 43"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 7-1",
                            Description = "",
                            Nom = "Vin",
                            ParentId = "7"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 9-1",
                            Description = "",
                            Nom = "Langues",
                            ParentId = "9"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 9-2",
                            Description = "",
                            Nom = "Éducation",
                            ParentId = "9"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 11-1",
                            Description = "",
                            Nom = "Flore",
                            ParentId = "11"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 12-1",
                            Description = "",
                            Nom = "Voyage",
                            ParentId = "12"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 13-1",
                            Description = "",
                            Nom = "Économie",
                            ParentId = "13"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 13-2",
                            Description = "",
                            Nom = "droit",
                            ParentId = "13"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 15-1",
                            Description = "",
                            Nom = "Politique",
                            ParentId = "15"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 20-1",
                            Description = "",
                            Nom = "Famille",
                            ParentId = "20"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 21-1",
                            Description = "",
                            Nom = "Théâtre",
                            ParentId = "21"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 21-2",
                            Description = "",
                            Nom = "Essais",
                            ParentId = "21"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 22-1",
                            Description = "",
                            Nom = "Santé",
                            ParentId = "22"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 23-1",
                            Description = "",
                            Nom = "Ésotérisme",
                            ParentId = "23"
                        },
                        new
                        {
                            Id = "Sous-Catégorie 31-1",
                            Description = "",
                            Nom = "Loisirs",
                            ParentId = "31"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Commande", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdresseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<string>("MembreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PrixTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StatutCommandeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("MembreId");

                    b.HasIndex("StatutCommandeId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("VLISSIDES.Models.Evaluation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<string>("LivreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MembreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LivreId");

                    b.HasIndex("MembreId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("VLISSIDES.Models.Evenement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbPlaces")
                        .HasColumnType("int");

                    b.Property<int>("NbPlacesMembre")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("VLISSIDES.Models.Favori", b =>
                {
                    b.Property<string>("MembreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LivreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MembreId", "LivreId");

                    b.HasIndex("LivreId");

                    b.ToTable("Favoris");
                });

            modelBuilder.Entity("VLISSIDES.Models.Langue", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Langues", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Code = "fr",
                            Nom = "Français"
                        },
                        new
                        {
                            Id = "2",
                            Code = "en",
                            Nom = "Anglais"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Livre", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommandeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Couverture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LangueId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaisonEditionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NbExemplaires")
                        .HasColumnType("int");

                    b.Property<int>("NbPages")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.HasIndex("LangueId");

                    b.HasIndex("MaisonEditionId");

                    b.ToTable("Livres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Excel 1",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2756),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001193",
                            MaisonEditionId = "Excel 1",
                            NbExemplaires = 24,
                            NbPages = 96,
                            Resume = "",
                            Titre = "\"Le Petit Prince\""
                        },
                        new
                        {
                            Id = "Excel 2",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2776),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001194",
                            MaisonEditionId = "Excel 2",
                            NbExemplaires = 325,
                            NbPages = 320,
                            Resume = "",
                            Titre = "\"Harry Potter à l'école des sorciers\""
                        },
                        new
                        {
                            Id = "Excel 3",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2779),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001195",
                            MaisonEditionId = "Excel 3",
                            NbExemplaires = 3,
                            NbPages = 328,
                            Resume = "",
                            Titre = "\"1984\""
                        },
                        new
                        {
                            Id = "Excel 4",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2782),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001196",
                            MaisonEditionId = "Excel 4",
                            NbExemplaires = 60,
                            NbPages = 576,
                            Resume = "",
                            Titre = "\"Le Seigneur des Anneaux : La Communauté de l'Anneau\""
                        },
                        new
                        {
                            Id = "Excel 5",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2785),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001197",
                            MaisonEditionId = "Excel 5",
                            NbExemplaires = 3,
                            NbPages = 592,
                            Resume = "",
                            Titre = "\"Le Nom de la Rose\""
                        },
                        new
                        {
                            Id = "Excel 6",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2788),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001198",
                            MaisonEditionId = "Excel 6",
                            NbExemplaires = 5,
                            NbPages = 384,
                            Resume = "",
                            Titre = "\"Orgueil et Préjugés\""
                        },
                        new
                        {
                            Id = "Excel 7",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2791),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001199",
                            MaisonEditionId = "Excel 7",
                            NbExemplaires = 10,
                            NbPages = 316,
                            Resume = "",
                            Titre = "\"L'Écume des Jours\""
                        },
                        new
                        {
                            Id = "Excel 8",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2794),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001200",
                            MaisonEditionId = "Excel 8",
                            NbExemplaires = 12,
                            NbPages = 1232,
                            Resume = "",
                            Titre = "\"Les Misérables\""
                        },
                        new
                        {
                            Id = "Excel 9",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2797),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001201",
                            MaisonEditionId = "Excel 9",
                            NbExemplaires = 1,
                            NbPages = 576,
                            Resume = "",
                            Titre = "\"Le Rouge et le Noir\""
                        },
                        new
                        {
                            Id = "Excel 10",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2801),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001202",
                            MaisonEditionId = "Excel 10",
                            NbExemplaires = 32,
                            NbPages = 464,
                            Resume = "",
                            Titre = "\"La Nuit des temps\""
                        },
                        new
                        {
                            Id = "Excel 11",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2814),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001203",
                            MaisonEditionId = "Excel 11",
                            NbExemplaires = 2,
                            NbPages = 256,
                            Resume = "",
                            Titre = "\"Le Guépard\""
                        },
                        new
                        {
                            Id = "Excel 12",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2817),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001204",
                            MaisonEditionId = "Excel 12",
                            NbExemplaires = 13,
                            NbPages = 540,
                            Resume = "",
                            Titre = "\"Les Fourmis\""
                        },
                        new
                        {
                            Id = "Excel 13",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2821),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540102",
                            MaisonEditionId = "Excel 13",
                            NbExemplaires = 62,
                            NbPages = 720,
                            Resume = "",
                            Titre = "\"Moby-Dick\""
                        },
                        new
                        {
                            Id = "Excel 14",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2824),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540103",
                            MaisonEditionId = "Excel 14",
                            NbExemplaires = 2,
                            NbPages = 704,
                            Resume = "",
                            Titre = "\"Crime et Châtiment\""
                        },
                        new
                        {
                            Id = "Excel 15",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2827),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540104",
                            MaisonEditionId = "Excel 15",
                            NbExemplaires = 2,
                            NbPages = 480,
                            Resume = "",
                            Titre = "\"Le Maître et Marguerite\""
                        },
                        new
                        {
                            Id = "Excel 16",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2830),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540105",
                            MaisonEditionId = "Excel 16",
                            NbExemplaires = 14,
                            NbPages = 255,
                            Resume = "",
                            Titre = "\"Le Parfum\""
                        },
                        new
                        {
                            Id = "Excel 17",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2833),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540106",
                            MaisonEditionId = "Excel 17",
                            NbExemplaires = 15,
                            NbPages = 288,
                            Resume = "",
                            Titre = "\"Le Lion\""
                        },
                        new
                        {
                            Id = "Excel 18",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2837),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540107",
                            MaisonEditionId = "Excel 18",
                            NbExemplaires = 34,
                            NbPages = 123,
                            Resume = "",
                            Titre = "\"L'Étranger\""
                        },
                        new
                        {
                            Id = "Excel 19",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2841),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540108",
                            MaisonEditionId = "Excel 19",
                            NbExemplaires = 6,
                            NbPages = 880,
                            Resume = "",
                            Titre = "\"Le Chardonneret\""
                        },
                        new
                        {
                            Id = "Excel 20",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2844),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540109",
                            MaisonEditionId = "Excel 20",
                            NbExemplaires = 2,
                            NbPages = 384,
                            Resume = "",
                            Titre = "\"Le Journal d'Anne Frank\""
                        },
                        new
                        {
                            Id = "Excel 21",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2848),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540110",
                            MaisonEditionId = "Excel 21",
                            NbExemplaires = 40,
                            NbPages = 144,
                            Resume = "",
                            Titre = "\"La Ferme des Animaux\""
                        },
                        new
                        {
                            Id = "Excel 22",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2851),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540111",
                            MaisonEditionId = "Excel 22",
                            NbExemplaires = 31,
                            NbPages = 416,
                            Resume = "",
                            Titre = "\"L'Odyssée\""
                        },
                        new
                        {
                            Id = "Excel 23",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2854),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540112",
                            MaisonEditionId = "Excel 23",
                            NbExemplaires = 20,
                            NbPages = 128,
                            Resume = "",
                            Titre = "\"Le Vieil Homme et la Mer\""
                        },
                        new
                        {
                            Id = "Excel 24",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2858),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540113",
                            MaisonEditionId = "Excel 24",
                            NbExemplaires = 21,
                            NbPages = 320,
                            Resume = "",
                            Titre = "\"Le Journal de Bridget Jones\""
                        },
                        new
                        {
                            Id = "Excel 25",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2861),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540114",
                            MaisonEditionId = "Excel 25",
                            NbExemplaires = 1,
                            NbPages = 416,
                            Resume = "",
                            Titre = "\"Le Meilleur des Mondes\""
                        },
                        new
                        {
                            Id = "Excel 26",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2865),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540115",
                            MaisonEditionId = "Excel 26",
                            NbExemplaires = 15,
                            NbPages = 192,
                            Resume = "",
                            Titre = "\"L'Alchimiste\""
                        },
                        new
                        {
                            Id = "Excel 27",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2868),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540116",
                            MaisonEditionId = "Excel 27",
                            NbExemplaires = 4,
                            NbPages = 384,
                            Resume = "",
                            Titre = "\"Le Portrait de Dorian Gray\""
                        },
                        new
                        {
                            Id = "Excel 28",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2874),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540118",
                            MaisonEditionId = "Excel 28",
                            NbExemplaires = 6,
                            NbPages = 1312,
                            Resume = "",
                            Titre = "\"Le Comte de Monte-Cristo\""
                        },
                        new
                        {
                            Id = "Excel 29",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2878),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540119",
                            MaisonEditionId = "Excel 29",
                            NbExemplaires = 20,
                            NbPages = 320,
                            Resume = "",
                            Titre = "\"Le Hobbit\""
                        },
                        new
                        {
                            Id = "Excel 30",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2890),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540120",
                            MaisonEditionId = "Excel 30",
                            NbExemplaires = 21,
                            NbPages = 704,
                            Resume = "",
                            Titre = "\"Les Trois Mousquetaires\""
                        },
                        new
                        {
                            Id = "Excel 31",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2906),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540121",
                            MaisonEditionId = "Excel 31",
                            NbExemplaires = 2,
                            NbPages = 368,
                            Resume = "",
                            Titre = "\"Les Cerfs-volants de Kaboul\""
                        },
                        new
                        {
                            Id = "Excel 32",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2941),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540122",
                            MaisonEditionId = "Excel 32",
                            NbExemplaires = 0,
                            NbPages = 224,
                            Resume = "",
                            Titre = "\"Le Grand Meaulnes\""
                        },
                        new
                        {
                            Id = "Excel 33",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2945),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540123",
                            MaisonEditionId = "Excel 33",
                            NbExemplaires = 10,
                            NbPages = 304,
                            Resume = "",
                            Titre = "\"Le Journal de Kurt Cobain\""
                        },
                        new
                        {
                            Id = "Excel 34",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2950),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "978-2253004229",
                            MaisonEditionId = "Excel 34",
                            NbExemplaires = 0,
                            NbPages = 288,
                            Resume = "",
                            Titre = "\"Les Fleurs du Mal\""
                        },
                        new
                        {
                            Id = "Excel 35",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2954),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "978-2070367980",
                            MaisonEditionId = "Excel 35",
                            NbExemplaires = 30,
                            NbPages = 128,
                            Resume = "",
                            Titre = "\"Le Parti pris des choses\""
                        },
                        new
                        {
                            Id = "Excel 36",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2958),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140586",
                            MaisonEditionId = "Excel 36",
                            NbExemplaires = 2,
                            NbPages = 288,
                            Resume = "",
                            Titre = "Les Contes de Grimm"
                        },
                        new
                        {
                            Id = "Excel 37",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2962),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140589",
                            MaisonEditionId = "Excel 37",
                            NbExemplaires = 12,
                            NbPages = 192,
                            Resume = "",
                            Titre = "Contes de Perrault"
                        },
                        new
                        {
                            Id = "Excel 38",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2966),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140590",
                            MaisonEditionId = "Excel 38",
                            NbExemplaires = 13,
                            NbPages = 384,
                            Resume = "",
                            Titre = "Les Contes d'Andersen"
                        },
                        new
                        {
                            Id = "Excel 39",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2970),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140591",
                            MaisonEditionId = "Excel 39",
                            NbExemplaires = 50,
                            NbPages = 832,
                            Resume = "",
                            Titre = "Contes des Mille et Une Nuits"
                        },
                        new
                        {
                            Id = "Excel 40",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2974),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140592",
                            MaisonEditionId = "Excel 40",
                            NbExemplaires = 21,
                            NbPages = 160,
                            Resume = "",
                            Titre = "Contes de la Rue Broca"
                        },
                        new
                        {
                            Id = "Excel 42",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2978),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140594",
                            MaisonEditionId = "Excel 42",
                            NbExemplaires = 3,
                            NbPages = 400,
                            Resume = "",
                            Titre = "\"Pédagogie positive\""
                        },
                        new
                        {
                            Id = "Excel 43",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2982),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140595",
                            MaisonEditionId = "Excel 43",
                            NbExemplaires = 23,
                            NbPages = 160,
                            Resume = "",
                            Titre = "\"L'École du Colibri\""
                        },
                        new
                        {
                            Id = "Excel 44",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(2986),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140596",
                            MaisonEditionId = "Excel 44",
                            NbExemplaires = 2,
                            NbPages = 288,
                            Resume = "",
                            Titre = "\"Apprendre autrement avec la pédagogie positive\""
                        },
                        new
                        {
                            Id = "Excel 45",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3023),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140597",
                            MaisonEditionId = "Excel 45",
                            NbExemplaires = 150,
                            NbPages = 320,
                            Resume = "",
                            Titre = "\"Le guide de survie enseignant suppléant\""
                        },
                        new
                        {
                            Id = "Excel 46",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3027),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140598",
                            MaisonEditionId = "Excel 46",
                            NbExemplaires = 3,
                            NbPages = 192,
                            Resume = "",
                            Titre = "\"La pédagogie Montessori à la maison\""
                        },
                        new
                        {
                            Id = "Excel 48",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3031),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782012101320",
                            MaisonEditionId = "Excel 48",
                            NbExemplaires = 20,
                            NbPages = 48,
                            Resume = "",
                            Titre = "\"Astérix le Gaulois\""
                        },
                        new
                        {
                            Id = "Excel 49",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3035),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782203001193",
                            MaisonEditionId = "Excel 49",
                            NbExemplaires = 12,
                            NbPages = 62,
                            Resume = "",
                            Titre = "\"Tintin au Tibet\""
                        },
                        new
                        {
                            Id = "Excel 50",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3040),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782070540102",
                            MaisonEditionId = "Excel 50",
                            NbExemplaires = 2,
                            NbPages = 296,
                            Resume = "",
                            Titre = "\"Maus\""
                        },
                        new
                        {
                            Id = "Excel 51",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3044),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "9782844140587",
                            MaisonEditionId = "Excel 51",
                            NbExemplaires = 6,
                            NbPages = 352,
                            Resume = "",
                            Titre = "\"Persepolis\""
                        },
                        new
                        {
                            Id = "Excel 52",
                            Couverture = "",
                            DateAjout = new DateTime(2023, 10, 5, 11, 24, 8, 445, DateTimeKind.Local).AddTicks(3048),
                            DatePublication = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "978-2-8094-3960-2",
                            MaisonEditionId = "Excel 52",
                            NbExemplaires = 8,
                            NbPages = 416,
                            Resume = "",
                            Titre = "\"Watchmen\""
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreAuteur", b =>
                {
                    b.Property<string>("LivreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuteurId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LivreId", "AuteurId");

                    b.HasIndex("AuteurId");

                    b.ToTable("LivreAuteurs", (string)null);

                    b.HasData(
                        new
                        {
                            LivreId = "Excel 1",
                            AuteurId = "Excel 1"
                        },
                        new
                        {
                            LivreId = "Excel 2",
                            AuteurId = "Excel 2"
                        },
                        new
                        {
                            LivreId = "Excel 3",
                            AuteurId = "Excel 3"
                        },
                        new
                        {
                            LivreId = "Excel 4",
                            AuteurId = "Excel 4"
                        },
                        new
                        {
                            LivreId = "Excel 5",
                            AuteurId = "Excel 5"
                        },
                        new
                        {
                            LivreId = "Excel 6",
                            AuteurId = "Excel 6"
                        },
                        new
                        {
                            LivreId = "Excel 7",
                            AuteurId = "Excel 7"
                        },
                        new
                        {
                            LivreId = "Excel 8",
                            AuteurId = "Excel 8"
                        },
                        new
                        {
                            LivreId = "Excel 9",
                            AuteurId = "Excel 9"
                        },
                        new
                        {
                            LivreId = "Excel 10",
                            AuteurId = "Excel 10"
                        },
                        new
                        {
                            LivreId = "Excel 11",
                            AuteurId = "Excel 11"
                        },
                        new
                        {
                            LivreId = "Excel 12",
                            AuteurId = "Excel 12"
                        },
                        new
                        {
                            LivreId = "Excel 13",
                            AuteurId = "Excel 13"
                        },
                        new
                        {
                            LivreId = "Excel 14",
                            AuteurId = "Excel 14"
                        },
                        new
                        {
                            LivreId = "Excel 15",
                            AuteurId = "Excel 15"
                        },
                        new
                        {
                            LivreId = "Excel 16",
                            AuteurId = "Excel 16"
                        },
                        new
                        {
                            LivreId = "Excel 17",
                            AuteurId = "Excel 17"
                        },
                        new
                        {
                            LivreId = "Excel 18",
                            AuteurId = "Excel 18"
                        },
                        new
                        {
                            LivreId = "Excel 19",
                            AuteurId = "Excel 19"
                        },
                        new
                        {
                            LivreId = "Excel 20",
                            AuteurId = "Excel 20"
                        },
                        new
                        {
                            LivreId = "Excel 21",
                            AuteurId = "Excel 3"
                        },
                        new
                        {
                            LivreId = "Excel 22",
                            AuteurId = "Excel 22"
                        },
                        new
                        {
                            LivreId = "Excel 23",
                            AuteurId = "Excel 23"
                        },
                        new
                        {
                            LivreId = "Excel 24",
                            AuteurId = "Excel 24"
                        },
                        new
                        {
                            LivreId = "Excel 25",
                            AuteurId = "Excel 25"
                        },
                        new
                        {
                            LivreId = "Excel 26",
                            AuteurId = "Excel 26"
                        },
                        new
                        {
                            LivreId = "Excel 27",
                            AuteurId = "Excel 27"
                        },
                        new
                        {
                            LivreId = "Excel 28",
                            AuteurId = "Excel 28"
                        },
                        new
                        {
                            LivreId = "Excel 29",
                            AuteurId = "Excel 4"
                        },
                        new
                        {
                            LivreId = "Excel 30",
                            AuteurId = "Excel 28"
                        },
                        new
                        {
                            LivreId = "Excel 31",
                            AuteurId = "Excel 31"
                        },
                        new
                        {
                            LivreId = "Excel 32",
                            AuteurId = "Excel 32"
                        },
                        new
                        {
                            LivreId = "Excel 33",
                            AuteurId = "Excel 33"
                        },
                        new
                        {
                            LivreId = "Excel 34",
                            AuteurId = "Excel 34"
                        },
                        new
                        {
                            LivreId = "Excel 35",
                            AuteurId = "Excel 35"
                        },
                        new
                        {
                            LivreId = "Excel 36",
                            AuteurId = "Excel 36"
                        },
                        new
                        {
                            LivreId = "Excel 37",
                            AuteurId = "Excel 37"
                        },
                        new
                        {
                            LivreId = "Excel 38",
                            AuteurId = "Excel 38"
                        },
                        new
                        {
                            LivreId = "Excel 39",
                            AuteurId = "Excel 39"
                        },
                        new
                        {
                            LivreId = "Excel 40",
                            AuteurId = "Excel 40"
                        },
                        new
                        {
                            LivreId = "Excel 42",
                            AuteurId = "Excel 42"
                        },
                        new
                        {
                            LivreId = "Excel 43",
                            AuteurId = "Excel 43"
                        },
                        new
                        {
                            LivreId = "Excel 44",
                            AuteurId = "Excel 44"
                        },
                        new
                        {
                            LivreId = "Excel 45",
                            AuteurId = "Excel 45"
                        },
                        new
                        {
                            LivreId = "Excel 46",
                            AuteurId = "Excel 46"
                        },
                        new
                        {
                            LivreId = "Excel 48",
                            AuteurId = "Excel 48"
                        },
                        new
                        {
                            LivreId = "Excel 49",
                            AuteurId = "Excel 49"
                        },
                        new
                        {
                            LivreId = "Excel 50",
                            AuteurId = "Excel 50"
                        },
                        new
                        {
                            LivreId = "Excel 51",
                            AuteurId = "Excel 51"
                        },
                        new
                        {
                            LivreId = "Excel 52",
                            AuteurId = "Excel 52"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreCategorie", b =>
                {
                    b.Property<string>("LivreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LivreId", "CategorieId");

                    b.HasIndex("CategorieId");

                    b.ToTable("LivreCategories", (string)null);

                    b.HasData(
                        new
                        {
                            LivreId = "Excel 1",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 2",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 3",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 4",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 5",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 6",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 7",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 8",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 9",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 10",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 11",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 12",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 13",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 14",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 15",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 16",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 17",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 18",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 19",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 20",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 21",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 22",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 23",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 24",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 25",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 26",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 27",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 28",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 29",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 30",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 31",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 32",
                            CategorieId = "18"
                        },
                        new
                        {
                            LivreId = "Excel 33",
                            CategorieId = "5"
                        },
                        new
                        {
                            LivreId = "Excel 34",
                            CategorieId = "Excel 34"
                        },
                        new
                        {
                            LivreId = "Excel 35",
                            CategorieId = "Excel 34"
                        },
                        new
                        {
                            LivreId = "Excel 36",
                            CategorieId = "6"
                        },
                        new
                        {
                            LivreId = "Excel 37",
                            CategorieId = "6"
                        },
                        new
                        {
                            LivreId = "Excel 38",
                            CategorieId = "6"
                        },
                        new
                        {
                            LivreId = "Excel 39",
                            CategorieId = "6"
                        },
                        new
                        {
                            LivreId = "Excel 40",
                            CategorieId = "6"
                        },
                        new
                        {
                            LivreId = "Excel 42",
                            CategorieId = "Excel 42"
                        },
                        new
                        {
                            LivreId = "Excel 43",
                            CategorieId = "Excel 43"
                        },
                        new
                        {
                            LivreId = "Excel 44",
                            CategorieId = "Excel 42"
                        },
                        new
                        {
                            LivreId = "Excel 45",
                            CategorieId = "Excel 42"
                        },
                        new
                        {
                            LivreId = "Excel 46",
                            CategorieId = "Excel 42"
                        },
                        new
                        {
                            LivreId = "Excel 48",
                            CategorieId = "Excel 48"
                        },
                        new
                        {
                            LivreId = "Excel 49",
                            CategorieId = "Excel 48"
                        },
                        new
                        {
                            LivreId = "Excel 50",
                            CategorieId = "Excel 48"
                        },
                        new
                        {
                            LivreId = "Excel 51",
                            CategorieId = "Excel 48"
                        },
                        new
                        {
                            LivreId = "Excel 52",
                            CategorieId = "Excel 48"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreCommande", b =>
                {
                    b.Property<string>("LivreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommandeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("LivreId", "CommandeId");

                    b.HasIndex("CommandeId");

                    b.ToTable("LivreCommandes");
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreTypeLivre", b =>
                {
                    b.Property<string>("LivreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeLivreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LivreId", "TypeLivreId");

                    b.HasIndex("TypeLivreId");

                    b.ToTable("LivreTypeLivres", (string)null);

                    b.HasData(
                        new
                        {
                            LivreId = "Excel 1",
                            TypeLivreId = "Papier Excel 1",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 2",
                            TypeLivreId = "Papier Excel 2",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 2",
                            TypeLivreId = "Numérique Excel 2",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 3",
                            TypeLivreId = "Papier Excel 3",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 4",
                            TypeLivreId = "Papier Excel 4",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 4",
                            TypeLivreId = "Numérique Excel 4",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 5",
                            TypeLivreId = "Papier Excel 5",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 6",
                            TypeLivreId = "Papier Excel 6",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 7",
                            TypeLivreId = "Papier Excel 7",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 8",
                            TypeLivreId = "Papier Excel 8",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 9",
                            TypeLivreId = "Papier Excel 9",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 10",
                            TypeLivreId = "Papier Excel 10",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 10",
                            TypeLivreId = "Numérique Excel 10",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 11",
                            TypeLivreId = "Papier Excel 11",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 12",
                            TypeLivreId = "Papier Excel 12",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 12",
                            TypeLivreId = "Numérique Excel 12",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 13",
                            TypeLivreId = "Papier Excel 13",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 13",
                            TypeLivreId = "Numérique Excel 13",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 14",
                            TypeLivreId = "Papier Excel 14",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 15",
                            TypeLivreId = "Papier Excel 15",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 15",
                            TypeLivreId = "Numérique Excel 15",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 16",
                            TypeLivreId = "Papier Excel 16",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 16",
                            TypeLivreId = "Numérique Excel 16",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 17",
                            TypeLivreId = "Papier Excel 17",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 18",
                            TypeLivreId = "Papier Excel 18",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 19",
                            TypeLivreId = "Papier Excel 19",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 20",
                            TypeLivreId = "Papier Excel 20",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 21",
                            TypeLivreId = "Papier Excel 21",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 22",
                            TypeLivreId = "Papier Excel 22",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 22",
                            TypeLivreId = "Numérique Excel 22",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 23",
                            TypeLivreId = "Papier Excel 23",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 23",
                            TypeLivreId = "Numérique Excel 23",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 24",
                            TypeLivreId = "Papier Excel 24",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 24",
                            TypeLivreId = "Numérique Excel 24",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 25",
                            TypeLivreId = "Papier Excel 25",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 25",
                            TypeLivreId = "Numérique Excel 25",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 26",
                            TypeLivreId = "Papier Excel 26",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 27",
                            TypeLivreId = "Papier Excel 27",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 28",
                            TypeLivreId = "Papier Excel 28",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 29",
                            TypeLivreId = "Papier Excel 29",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 29",
                            TypeLivreId = "Numérique Excel 29",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 30",
                            TypeLivreId = "Papier Excel 30",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 31",
                            TypeLivreId = "Papier Excel 31",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 32",
                            TypeLivreId = "Papier Excel 32",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 33",
                            TypeLivreId = "Papier Excel 33",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 34",
                            TypeLivreId = "Papier Excel 34",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 35",
                            TypeLivreId = "Papier Excel 35",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 36",
                            TypeLivreId = "Papier Excel 36",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 36",
                            TypeLivreId = "Numérique Excel 36",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 37",
                            TypeLivreId = "Papier Excel 37",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 37",
                            TypeLivreId = "Numérique Excel 37",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 38",
                            TypeLivreId = "Papier Excel 38",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 38",
                            TypeLivreId = "Numérique Excel 38",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 39",
                            TypeLivreId = "Papier Excel 39",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 39",
                            TypeLivreId = "Numérique Excel 39",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 40",
                            TypeLivreId = "Papier Excel 40",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 40",
                            TypeLivreId = "Numérique Excel 40",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 42",
                            TypeLivreId = "Papier Excel 42",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 42",
                            TypeLivreId = "Numérique Excel 42",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 43",
                            TypeLivreId = "Papier Excel 43",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 43",
                            TypeLivreId = "Numérique Excel 43",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 44",
                            TypeLivreId = "Papier Excel 44",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 44",
                            TypeLivreId = "Numérique Excel 44",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 45",
                            TypeLivreId = "Papier Excel 45",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 45",
                            TypeLivreId = "Numérique Excel 45",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 46",
                            TypeLivreId = "Papier Excel 46",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 46",
                            TypeLivreId = "Numérique Excel 46",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 48",
                            TypeLivreId = "Papier Excel 48",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 49",
                            TypeLivreId = "Papier Excel 49",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 50",
                            TypeLivreId = "Papier Excel 50",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 51",
                            TypeLivreId = "Papier Excel 51",
                            Prix = 0m
                        },
                        new
                        {
                            LivreId = "Excel 52",
                            TypeLivreId = "Papier Excel 52",
                            Prix = 0m
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.MaisonEdition", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaisonEditions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Excel 1",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 2",
                            Nom = "Gallimard Jeunesse"
                        },
                        new
                        {
                            Id = "Excel 3",
                            Nom = "Secker and Warburg"
                        },
                        new
                        {
                            Id = "Excel 4",
                            Nom = "Christian Bourgois Éditeur"
                        },
                        new
                        {
                            Id = "Excel 5",
                            Nom = "Grasset"
                        },
                        new
                        {
                            Id = "Excel 6",
                            Nom = "Penguin Classics"
                        },
                        new
                        {
                            Id = "Excel 7",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 8",
                            Nom = "Penguin Classics"
                        },
                        new
                        {
                            Id = "Excel 9",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 10",
                            Nom = "Folio"
                        },
                        new
                        {
                            Id = "Excel 11",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 12",
                            Nom = "Albin Michel"
                        },
                        new
                        {
                            Id = "Excel 13",
                            Nom = "Penguin Classics"
                        },
                        new
                        {
                            Id = "Excel 14",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 15",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 16",
                            Nom = "Pocket"
                        },
                        new
                        {
                            Id = "Excel 17",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 18",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 19",
                            Nom = "Plume de Paon"
                        },
                        new
                        {
                            Id = "Excel 20",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 21",
                            Nom = "Folio"
                        },
                        new
                        {
                            Id = "Excel 22",
                            Nom = "Flammarion"
                        },
                        new
                        {
                            Id = "Excel 23",
                            Nom = "Folio"
                        },
                        new
                        {
                            Id = "Excel 24",
                            Nom = "Belfond"
                        },
                        new
                        {
                            Id = "Excel 25",
                            Nom = "Pocket"
                        },
                        new
                        {
                            Id = "Excel 26",
                            Nom = "Flammarion"
                        },
                        new
                        {
                            Id = "Excel 27",
                            Nom = "Livre de Poche Classiques"
                        },
                        new
                        {
                            Id = "Excel 28",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 29",
                            Nom = "Christian Bourgois Éditeur"
                        },
                        new
                        {
                            Id = "Excel 30",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 31",
                            Nom = "Belfond"
                        },
                        new
                        {
                            Id = "Excel 32",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 33",
                            Nom = "Camion Blanc"
                        },
                        new
                        {
                            Id = "Excel 34",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 35",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 36",
                            Nom = "Gallimard"
                        },
                        new
                        {
                            Id = "Excel 37",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 38",
                            Nom = "Flammarion"
                        },
                        new
                        {
                            Id = "Excel 39",
                            Nom = "Le Livre de Poche"
                        },
                        new
                        {
                            Id = "Excel 40",
                            Nom = "Folio Junior"
                        },
                        new
                        {
                            Id = "Excel 42",
                            Nom = "Les Arènes"
                        },
                        new
                        {
                            Id = "Excel 43",
                            Nom = "Actes Sud"
                        },
                        new
                        {
                            Id = "Excel 44",
                            Nom = "Eyrolles"
                        },
                        new
                        {
                            Id = "Excel 45",
                            Nom = "Nathan"
                        },
                        new
                        {
                            Id = "Excel 46",
                            Nom = "Eyrolles"
                        },
                        new
                        {
                            Id = "Excel 48",
                            Nom = "Hachette"
                        },
                        new
                        {
                            Id = "Excel 49",
                            Nom = "Casterman"
                        },
                        new
                        {
                            Id = "Excel 50",
                            Nom = "Flammarion"
                        },
                        new
                        {
                            Id = "Excel 51",
                            Nom = "L'Association"
                        },
                        new
                        {
                            Id = "Excel 52",
                            Nom = "DC Comics"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Promotions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rabais")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("VLISSIDES.Models.Reservation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvenementId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MembreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.HasIndex("MembreId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("VLISSIDES.Models.StatutCommande", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatutCommande", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Nom = "En attente"
                        },
                        new
                        {
                            Id = "2",
                            Nom = "En cours de traitement"
                        },
                        new
                        {
                            Id = "3",
                            Nom = "En cours de livraison"
                        },
                        new
                        {
                            Id = "4",
                            Nom = "Livrée"
                        },
                        new
                        {
                            Id = "5",
                            Nom = "Annulée"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.TypeLivre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TypeLivres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Papier Excel 1",
                            Nom = "Papier",
                            Prix = 22.25
                        },
                        new
                        {
                            Id = "Papier Excel 2",
                            Nom = "Papier",
                            Prix = 32.75
                        },
                        new
                        {
                            Id = "Numérique Excel 2",
                            Nom = "Numérique",
                            Prix = 30.0
                        },
                        new
                        {
                            Id = "Papier Excel 3",
                            Nom = "Papier",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Papier Excel 4",
                            Nom = "Papier",
                            Prix = 29.0
                        },
                        new
                        {
                            Id = "Numérique Excel 4",
                            Nom = "Numérique",
                            Prix = 27.0
                        },
                        new
                        {
                            Id = "Papier Excel 5",
                            Nom = "Papier",
                            Prix = 19.5
                        },
                        new
                        {
                            Id = "Papier Excel 6",
                            Nom = "Papier",
                            Prix = 18.75
                        },
                        new
                        {
                            Id = "Papier Excel 7",
                            Nom = "Papier",
                            Prix = 15.0
                        },
                        new
                        {
                            Id = "Papier Excel 8",
                            Nom = "Papier",
                            Prix = 21.25
                        },
                        new
                        {
                            Id = "Papier Excel 9",
                            Nom = "Papier",
                            Prix = 9.75
                        },
                        new
                        {
                            Id = "Papier Excel 10",
                            Nom = "Papier",
                            Prix = 32.0
                        },
                        new
                        {
                            Id = "Numérique Excel 10",
                            Nom = "Numérique",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Papier Excel 11",
                            Nom = "Papier",
                            Prix = 28.0
                        },
                        new
                        {
                            Id = "Papier Excel 12",
                            Nom = "Papier",
                            Prix = 26.0
                        },
                        new
                        {
                            Id = "Numérique Excel 12",
                            Nom = "Numérique",
                            Prix = 20.0
                        },
                        new
                        {
                            Id = "Papier Excel 13",
                            Nom = "Papier",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Numérique Excel 13",
                            Nom = "Numérique",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Papier Excel 14",
                            Nom = "Papier",
                            Prix = 13.0
                        },
                        new
                        {
                            Id = "Papier Excel 15",
                            Nom = "Papier",
                            Prix = 24.0
                        },
                        new
                        {
                            Id = "Numérique Excel 15",
                            Nom = "Numérique",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Papier Excel 16",
                            Nom = "Papier",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Numérique Excel 16",
                            Nom = "Numérique",
                            Prix = 14.0
                        },
                        new
                        {
                            Id = "Papier Excel 17",
                            Nom = "Papier",
                            Prix = 30.0
                        },
                        new
                        {
                            Id = "Papier Excel 18",
                            Nom = "Papier",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Papier Excel 19",
                            Nom = "Papier",
                            Prix = 25.0
                        },
                        new
                        {
                            Id = "Papier Excel 20",
                            Nom = "Papier",
                            Prix = 19.75
                        },
                        new
                        {
                            Id = "Papier Excel 21",
                            Nom = "Papier",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Papier Excel 22",
                            Nom = "Papier",
                            Prix = 31.5
                        },
                        new
                        {
                            Id = "Numérique Excel 22",
                            Nom = "Numérique",
                            Prix = 31.5
                        },
                        new
                        {
                            Id = "Papier Excel 23",
                            Nom = "Papier",
                            Prix = 24.75
                        },
                        new
                        {
                            Id = "Numérique Excel 23",
                            Nom = "Numérique",
                            Prix = 24.75
                        },
                        new
                        {
                            Id = "Papier Excel 24",
                            Nom = "Papier",
                            Prix = 18.25
                        },
                        new
                        {
                            Id = "Numérique Excel 24",
                            Nom = "Numérique",
                            Prix = 15.0
                        },
                        new
                        {
                            Id = "Papier Excel 25",
                            Nom = "Papier",
                            Prix = 26.0
                        },
                        new
                        {
                            Id = "Numérique Excel 25",
                            Nom = "Numérique",
                            Prix = 20.0
                        },
                        new
                        {
                            Id = "Papier Excel 26",
                            Nom = "Papier",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Papier Excel 27",
                            Nom = "Papier",
                            Prix = 21.0
                        },
                        new
                        {
                            Id = "Papier Excel 28",
                            Nom = "Papier",
                            Prix = 17.0
                        },
                        new
                        {
                            Id = "Papier Excel 29",
                            Nom = "Papier",
                            Prix = 36.0
                        },
                        new
                        {
                            Id = "Numérique Excel 29",
                            Nom = "Numérique",
                            Prix = 32.0
                        },
                        new
                        {
                            Id = "Papier Excel 30",
                            Nom = "Papier",
                            Prix = 15.0
                        },
                        new
                        {
                            Id = "Papier Excel 31",
                            Nom = "Papier",
                            Prix = 16.0
                        },
                        new
                        {
                            Id = "Papier Excel 32",
                            Nom = "Papier",
                            Prix = 21.0
                        },
                        new
                        {
                            Id = "Papier Excel 33",
                            Nom = "Papier",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Papier Excel 34",
                            Nom = "Papier",
                            Prix = 19.5
                        },
                        new
                        {
                            Id = "Papier Excel 35",
                            Nom = "Papier",
                            Prix = 24.0
                        },
                        new
                        {
                            Id = "Papier Excel 36",
                            Nom = "Papier",
                            Prix = 32.0
                        },
                        new
                        {
                            Id = "Numérique Excel 36",
                            Nom = "Numérique",
                            Prix = 24.0
                        },
                        new
                        {
                            Id = "Papier Excel 37",
                            Nom = "Papier",
                            Prix = 36.0
                        },
                        new
                        {
                            Id = "Numérique Excel 37",
                            Nom = "Numérique",
                            Prix = 28.0
                        },
                        new
                        {
                            Id = "Papier Excel 38",
                            Nom = "Papier",
                            Prix = 28.0
                        },
                        new
                        {
                            Id = "Numérique Excel 38",
                            Nom = "Numérique",
                            Prix = 20.0
                        },
                        new
                        {
                            Id = "Papier Excel 39",
                            Nom = "Papier",
                            Prix = 29.0
                        },
                        new
                        {
                            Id = "Numérique Excel 39",
                            Nom = "Numérique",
                            Prix = 22.0
                        },
                        new
                        {
                            Id = "Papier Excel 40",
                            Nom = "Papier",
                            Prix = 18.0
                        },
                        new
                        {
                            Id = "Numérique Excel 40",
                            Nom = "Numérique",
                            Prix = 12.0
                        },
                        new
                        {
                            Id = "Papier Excel 42",
                            Nom = "Papier",
                            Prix = 64.0
                        },
                        new
                        {
                            Id = "Numérique Excel 42",
                            Nom = "Numérique",
                            Prix = 50.0
                        },
                        new
                        {
                            Id = "Papier Excel 43",
                            Nom = "Papier",
                            Prix = 21.0
                        },
                        new
                        {
                            Id = "Numérique Excel 43",
                            Nom = "Numérique",
                            Prix = 21.0
                        },
                        new
                        {
                            Id = "Papier Excel 44",
                            Nom = "Papier",
                            Prix = 50.0
                        },
                        new
                        {
                            Id = "Numérique Excel 44",
                            Nom = "Numérique",
                            Prix = 48.0
                        },
                        new
                        {
                            Id = "Papier Excel 45",
                            Nom = "Papier",
                            Prix = 36.0
                        },
                        new
                        {
                            Id = "Numérique Excel 45",
                            Nom = "Numérique",
                            Prix = 30.0
                        },
                        new
                        {
                            Id = "Papier Excel 46",
                            Nom = "Papier",
                            Prix = 25.0
                        },
                        new
                        {
                            Id = "Numérique Excel 46",
                            Nom = "Numérique",
                            Prix = 25.0
                        },
                        new
                        {
                            Id = "Papier Excel 48",
                            Nom = "Papier",
                            Prix = 28.0
                        },
                        new
                        {
                            Id = "Papier Excel 49",
                            Nom = "Papier",
                            Prix = 26.0
                        },
                        new
                        {
                            Id = "Papier Excel 50",
                            Nom = "Papier",
                            Prix = 24.0
                        },
                        new
                        {
                            Id = "Papier Excel 51",
                            Nom = "Papier",
                            Prix = 32.0
                        },
                        new
                        {
                            Id = "Papier Excel 52",
                            Nom = "Papier",
                            Prix = 31.0
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Employe", b =>
                {
                    b.HasBaseType("VLISSIDES.Models.ApplicationUser");

                    b.Property<string>("NoEmploye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Employe");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            AdressePrincipaleId = "",
                            ConcurrencyStamp = "5c349bde-d69e-49b4-a1ee-8015270c3dac",
                            Email = "employe@employe.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Nom = "EMPLOYE",
                            NormalizedEmail = "EMPLOYE@EMPLOYE.COM",
                            NormalizedUserName = "EMPLOYE@EMPLOYE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP5A0+Sh49GqZJZev/DKqD7yieTvqVejrmGV0mV6PL5KNos4tLJnJL1tHceX7HezGA==",
                            PhoneNumberConfirmed = false,
                            Prenom = "Employe",
                            SecurityStamp = "2afbb670-ed16-4e83-a7ce-e168908f0f48",
                            TwoFactorEnabled = false,
                            UserName = "employe@employe.com",
                            NoEmploye = "007"
                        });
                });

            modelBuilder.Entity("VLISSIDES.Models.Membre", b =>
                {
                    b.HasBaseType("VLISSIDES.Models.ApplicationUser");

                    b.Property<string>("CommandeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdhesion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoMembre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Membre");

                    b.HasData(
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            AdressePrincipaleId = "",
                            ConcurrencyStamp = "7f2d36c8-73ea-49a5-976b-a0155eacb011",
                            Email = "membre@membre.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Nom = "MEMBRE",
                            NormalizedEmail = "MEMBRE@MEMBRE.COM",
                            NormalizedUserName = "MEMBRE@MEMBRE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP5A0+Sh49GqZJZev/DKqD7yieTvqVejrmGV0mV6PL5KNos4tLJnJL1tHceX7HezGA==",
                            PhoneNumberConfirmed = false,
                            Prenom = "Membre",
                            SecurityStamp = "f2536d25-a9e1-4643-9cf6-b2afd7f588f9",
                            TwoFactorEnabled = false,
                            UserName = "membre@membre.com",
                            DateAdhesion = new DateTime(2023, 10, 5, 11, 24, 10, 86, DateTimeKind.Local).AddTicks(1131),
                            NoMembre = "123456"
                        });
                });

            modelBuilder.Entity("LivrePromotions", b =>
                {
                    b.HasOne("VLISSIDES.Models.Livre", null)
                        .WithMany()
                        .HasForeignKey("LivresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Promotions", null)
                        .WithMany()
                        .HasForeignKey("PromotionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VLISSIDES.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VLISSIDES.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VLISSIDES.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VLISSIDES.Models.Adresse", b =>
                {
                    b.HasOne("VLISSIDES.Models.ApplicationUser", "UtilisateurLivraison")
                        .WithMany("AdressesLivraison")
                        .HasForeignKey("UtilisateurLivraisonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VLISSIDES.Models.ApplicationUser", "UtilisateurPrincipal")
                        .WithOne("AdressePrincipale")
                        .HasForeignKey("VLISSIDES.Models.Adresse", "UtilisateurPrincipalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UtilisateurLivraison");

                    b.Navigation("UtilisateurPrincipal");
                });

            modelBuilder.Entity("VLISSIDES.Models.Categorie", b =>
                {
                    b.HasOne("VLISSIDES.Models.Categorie", "Parent")
                        .WithMany("Enfants")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("VLISSIDES.Models.Commande", b =>
                {
                    b.HasOne("VLISSIDES.Models.Adresse", "AdresseLivraison")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Membre", "Membre")
                        .WithMany("Commandes")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.StatutCommande", null)
                        .WithMany("Commandes")
                        .HasForeignKey("StatutCommandeId");

                    b.Navigation("AdresseLivraison");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("VLISSIDES.Models.Evaluation", b =>
                {
                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("Evaluations")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Membre", "Membre")
                        .WithMany()
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("VLISSIDES.Models.Favori", b =>
                {
                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("Favoris")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Membre", "Membre")
                        .WithMany("Favoris")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("VLISSIDES.Models.Livre", b =>
                {
                    b.HasOne("VLISSIDES.Models.Commande", null)
                        .WithMany("Livres")
                        .HasForeignKey("CommandeId");

                    b.HasOne("VLISSIDES.Models.Langue", "Langue")
                        .WithMany("Livres")
                        .HasForeignKey("LangueId");

                    b.HasOne("VLISSIDES.Models.MaisonEdition", "MaisonEdition")
                        .WithMany("Livres")
                        .HasForeignKey("MaisonEditionId");

                    b.Navigation("Langue");

                    b.Navigation("MaisonEdition");
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreAuteur", b =>
                {
                    b.HasOne("VLISSIDES.Models.Auteur", "Auteur")
                        .WithMany("Livres")
                        .HasForeignKey("AuteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("LivreAuteurs")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auteur");

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreCategorie", b =>
                {
                    b.HasOne("VLISSIDES.Models.Categorie", "Categorie")
                        .WithMany("Livres")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("Categories")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreCommande", b =>
                {
                    b.HasOne("VLISSIDES.Models.Commande", "Commande")
                        .WithMany("LivreCommandes")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("LivreCommandes")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commande");

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("VLISSIDES.Models.LivreTypeLivre", b =>
                {
                    b.HasOne("VLISSIDES.Models.Livre", "Livre")
                        .WithMany("LivreTypeLivres")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.TypeLivre", "TypeLivre")
                        .WithMany("TypeLivres")
                        .HasForeignKey("TypeLivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("TypeLivre");
                });

            modelBuilder.Entity("VLISSIDES.Models.Reservation", b =>
                {
                    b.HasOne("VLISSIDES.Models.Evenement", "Evenement")
                        .WithMany("Reservations")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VLISSIDES.Models.Membre", "Membre")
                        .WithMany("Reservations")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("VLISSIDES.Models.ApplicationUser", b =>
                {
                    b.Navigation("AdressePrincipale");

                    b.Navigation("AdressesLivraison");
                });

            modelBuilder.Entity("VLISSIDES.Models.Auteur", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("VLISSIDES.Models.Categorie", b =>
                {
                    b.Navigation("Enfants");

                    b.Navigation("Livres");
                });

            modelBuilder.Entity("VLISSIDES.Models.Commande", b =>
                {
                    b.Navigation("LivreCommandes");

                    b.Navigation("Livres");
                });

            modelBuilder.Entity("VLISSIDES.Models.Evenement", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("VLISSIDES.Models.Langue", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("VLISSIDES.Models.Livre", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Evaluations");

                    b.Navigation("Favoris");

                    b.Navigation("LivreAuteurs");

                    b.Navigation("LivreCommandes");

                    b.Navigation("LivreTypeLivres");
                });

            modelBuilder.Entity("VLISSIDES.Models.MaisonEdition", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("VLISSIDES.Models.StatutCommande", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("VLISSIDES.Models.TypeLivre", b =>
                {
                    b.Navigation("TypeLivres");
                });

            modelBuilder.Entity("VLISSIDES.Models.Membre", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Favoris");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
